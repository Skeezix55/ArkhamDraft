{"version":3,"sources":["components/options/InvestigatorSettings.js","components/options/SettingsType.js","components/options/SettingsChaos.js","components/options/SettingsDraft.js","components/options/SettingsPhase.js","components/options/SettingsPhasedDraft.js","components/options/SettingsBuild.js","components/options/SettingsUpgrade.js","components/options/Settings.js","components/PackData.js","components/options/CollectionCycle.js","components/options/CollectionSettings.js","components/draft/CardList.js","components/draft/DraftArea.js","components/ExportDeck.js","components/options/ExportSettings.js","components/draft/Draft.js","components/DraftFilters.js","App.js","components/DraftData.js","AppContainer.js","index.js"],"names":["InvestigatorSettings","props","investigator","secondaryClass","selectedDeckSize","selectedTaboo","deckSize","cardData","tabooData","investigatorData","handleChange","event","onChangeSetting","target","name","value","secondaryFactionList","deckSizeList","tabooList","secondaryClassValue","deckSizeValue","investigatorID","Object","keys","filter","key","deckOptions","deck_options","i","length","faction_select","map","item","index","toUpperCase","slice","deck_size_select","code","date_start","unshift","tabooDiv","className","onChange","secondaryClassDiv","deckSizeDiv","id","onClick","Math","floor","random","SettingsType","style1","style2","handleClick","attributes","nodeValue","draftTab","backgroundColor","borderLeft","borderBottom","borderRight","style","SettingsChaos","SettingsDraft","type","min","max","step","draftCount","SettingsPhase","padding","phase","maxCards","draftCards","checked","draftUseLimited","SettingsPhasedDraft","limit2","limit3","limit4","warningText2","warningText3","warningStyle2","warningStyle3","warningStyle4","display","SettingsBuild","draftSettings","draftDescription","draftType","myriadText","myriadCount","width","textAlign","SettingsUpgrade","draftWeighting","draftXP","Settings","button","ready","filteredCount","color","PackData","CollectionCycle","collectionSets","includedSets","columnValue","checkboxes","header","position","right","top","title","CollectionSettings","expandCollection","handleExpand","coreCount","packCount","CardList","cardList","updateCardOverlay","assetCount","eventCount","skillCount","otherCount","hand","hand2","arcane","arcane2","accessory","body","ally","tarot","otherasset","permanent","skill","other","onEnterCard","cardArray","imagesrc","clientX","onLeaveCard","forEach","type_code","push","count","slot","assetHeader","handHeader","handContents","sort","a","b","countStr","onPointerEnter","onPointerLeave","hand2Header","hand2Contents","arcaneHeader","arcaneContents","arcane2Header","arcane2Contents","accessoryHeader","accessoryContents","bodyHeader","bodyContents","allyHeader","allyContents","tarotHeader","tarotContents","otherassetHeader","otherassetContents","permanentHeader","permanentContents","eventHeader","eventContents","skillHeader","skillContents","otherHeader","otherContents","marginBottom","DraftArea","draftPool","draftCard","updateCardList","updateDraftPool","newList","findIndex","src","includes","updatedList","concat","images","imageSrc","undefined","alt","phaseText","ExportDeck","fileType","deckTitle","specialCards","console","log","asset","treachery","enemy","investigatorCard","listItem","card","dataItem","dataObject","subname","xp","pack","pack_code","octgn_id","deckTextData","split","replace","assets","events","skills","treacheries","enemies","others","element","document","createElement","file","Blob","href","URL","createObjectURL","download","appendChild","click","removeChild","ExportO8D","subtitle","level","ExportTXT","SettingsExport","useState","useSignatures","changeUseSignatures","basicWeakness","changeBasicWeakness","changeDeckTitle","handleCheckbox","newSignatures","signatureCards","cardRequirements","deck_requirements","useCheckbox","crkey","requirement","rkey","a1","a2","parseInt","weaknessCards","subtype_code","signatureOptions","signatureID","sigQuantity","quantity","quantityText","pack_name","weaknessCount","weaknessRoll","handleWeaknessClick","entries","signatureIndex","signatureArray","j","cardID","weaknessID","weaknessCard","handleExportClick","Draft","draftProgress","resetApp","investigatorCardImage","investigatorCardImageBack","backimagesrc","draftContent","exportContent","ExportSettings","progress","FilterCards","upgrade","filteredDeck","list","options","legal","limit","testDeckOption","filterDeckForLimited","requirementOptions","joeRequiredCards","cardTraits","traits","search","RegExp","countDeck","trait","lolaRequiredCards","faction","faction_code","faction2_code","e1","e2","minCount","factionRequirement","minLevel","maxLevel","countDeckLimited","option","secondaryFaction","uses","text","f","ixp","cardText","cardType","find","bonded_to","tabooxp","exceptional","tabooexceptional","restrictions","duplicate_of_code","duplicateID","duplicateCard","taboodecklimit","rejected","optionLegal","not","limited","deckLimit","deck_limit","App","contents","overlayImage","updateOverlayImage","overlayPosition","updateOverlayPosition","windowSize","height","setWindowSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListnener","useWindowSize","overlay","fetchError","building","image","xloc","cardLimit","boxSizing","DrawCard","randomCard","randomCode","standardChaosDraft","draftTarget","filteredData","simpleDraft","AppContainer","changeInvestigator","changeSecondaryClass","changeSelectedDeckSize","changeSelectedTaboo","changeDeckSize","changeDraftTab","changeDraftType","changeDraftWeighting","changeDraftXP","changeDraftCount","changeDraftCards","changeDraftUseLimited","changeBuilding","newPhase","changeNewPhase","updateCardData","updateTabooData","updateFetchError","changePhase","complete","changeComplete","updateMyriadCount","updateCollectionSets","changeExpandCollection","draftProgressBuild","draftProgressUpgrade","fetch","then","res","json","catch","fetchData","cards","JSON","parse","item1","item2","fetchTaboo","useCallback","cardXP","addCount","myriad","duplicateKey","doChangeDraftCount","newCount","doChangeDraftCards","newCards","doChangeDraftUseLimited","newUseLimited","pool","size","classOptions","addCollectionSets","set","removeCollectionSets","tData","cData","tabooEntry","taboo","mergeTabooData","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b6085165.chunk.js","sourcesContent":["import React from \"react\"\n\nfunction InvestigatorSettings(props) {\n    const { investigator, secondaryClass, selectedDeckSize, selectedTaboo, deckSize, cardData, tabooData } = props\n\n    const investigatorData = [\n        'Agnes Baker',\n        'Akachi Onyele',\n        'Amanda Sharpe',\n        '\"Ashcan\" Pete',\n        'Calvin Wright',\n        'Carolyn Fern',\n        'Daisy Walker',\n        'Dexter Drake',\n        'Diana Stanley',\n        'Father Mateo',\n        'Finn Edwards',\n        'Gloria Goldberg',\n        'Harvey Walters',\n        'Jacqueline Fine',\n        'Jenny Barnes',\n        'Jim Culver',\n        'Joe Diamond',\n        'Leo Anderson',\n        'Lola Hayes',\n        'Luke Robinson',\n        'Mandy Thompson',\n        'Marie Lambeau',\n        'Mark Harrigan',\n        'Minh Thi Phan',\n        'Nathaniel Cho',\n        'Norman Withers',\n        'Patrice Hathaway',\n        'Preston Fairmont',\n        'Rex Murphy',\n        'Rita Young',\n        'Roland Banks',\n        'Sefina Rousseau',\n        'Silas Marsh',\n        'Sister Mary',\n        '\"Skids\" O\\'Toole',\n        'Stella Clark',\n        'Tommy Muldoon',\n        'Tony Morgan',\n        'Trish Scarborough',\n        'Ursula Downs',\n        'Wendy Adams',\n        'William Yorick',\n        'Winifred Habbamock',\n        'Zoey Samaras'\n    ]\n\n    function handleChange(event) {\n        props.onChangeSetting(event.target.name, event.target.value)\n    }\n\n    function handleRandom(event) {\n        props.onChangeSetting('investigator', investigatorData[Math.floor(Math.random() * investigatorData.length)])\n    }\n\n    let secondaryFactionList = null\n    let deckSizeList = null\n    let tabooList = null\n    let secondaryClassValue = secondaryClass\n    let deckSizeValue = selectedDeckSize ? selectedDeckSize : deckSize\n\n    if (cardData) {\n        const investigatorID = Object.keys(cardData)\n        .filter(key => {\n            return  cardData[key].name === investigator\n        })[0]\n\n        const deckOptions = cardData[investigatorID].deck_options\n\n        for (let i = 0; i < deckOptions.length; i++) {\n            if (deckOptions[i].name === 'Secondary Class')\n            {\n                const list = deckOptions[i].faction_select\n\n                secondaryFactionList = list.map((item, index) => {\n                    return <option value={item} key={index}>\n                        {item[0].toUpperCase() + item.slice(1)}\n                        </option>\n                })\n            }\n            else if (deckOptions[i].name === 'Deck Size')\n            {\n                const list = deckOptions[i].deck_size_select\n\n                deckSizeList = list.map((item, index) => {\n                    return <option value={item} key={index}>\n                        {item}\n                        </option>\n                })\n            }\n        }\n    }\n\n    if (tabooData) {\n        tabooList = tabooData.map((item, index) => {\n            return <option value={item.code} key={index}>\n                {item.date_start}\n                </option>\n        })\n\n        tabooList.unshift(<option value=\"None\" key=\"100\">\n            {\"None\"}\n            </option>)\n    }\n\n    const tabooDiv = <div>\n        <label className=\"taboo\" value={selectedTaboo}>Taboo list:</label>\n        <span className=\"investigator-option\">\n            <select className=\"taboo investigatorList\" name=\"taboo\" value={selectedTaboo} onChange={handleChange}>\n                {tabooList}\n            </select>\n        </span>\n    </div>\n\n//    let skidsName = '\"Skids\" '\n//    skidsName = skidsName + \"O'Toole\"\n//    const skidsOption = <option value={skidsName}>{skidsName}</option>\n\n    const secondaryClassDiv = secondaryFactionList ?\n        <div>\n            <label value={secondaryClassValue}>Secondary class:</label>\n            <span className=\"investigator-option\">\n                <select className=\"secondaryClass investigatorList\" name=\"secondaryClass\" value={secondaryClassValue} onChange={handleChange}>\n                    {secondaryFactionList}\n                </select>\n            </span>\n        </div>\n        :\n        null\n\n    const deckSizeDiv = deckSizeList ?\n        <div>\n            <label value={deckSizeValue}>Deck size:</label>\n            <span className=\"investigator-option\">\n                <select className=\"deckSize investigatorList\" name=\"selectedDeckSize\" value={deckSizeValue} onChange={handleChange}>\n                    {deckSizeList}\n                </select>\n            </span>\n        </div>\n        :\n        null\n\n    return (\n        <div className=\"settingsDiv\">\n            <h3>Investigator Options</h3>\n            <label>Investigator:</label>\n            <span className=\"investigator-option\">\n                <select name=\"investigator\" value={investigator} onChange={handleChange}>\n                    {investigatorData.map( (name, index) => (\n                        <option value={name} key={name}>{name}</option>\n                    ))}\n                </select>\n                <button className=\"button-rect\" id=\"button-random\" onClick={handleRandom}>Random</button>\n            </span>\n            {secondaryClassDiv}\n            {deckSizeDiv}\n            {tabooDiv}\n        </div>\n    )\n}\n\nexport default InvestigatorSettings","import React from 'react'\n\nfunction SettingsType(props) {\n    let style1 = {}\n    let style2 = {}\n\n    if (props.draftTab === 'Build Deck') {\n        style1 = {\n            backgroundColor: \"#ebebeb\"\n        }\n        style2 = {\n            backgroundColor: \"#bababa\",\n            borderLeft: \"black 2px solid\",\n            borderBottom: \"black 2px solid\"\n        }\n    } else {\n        style1 = {\n            backgroundColor: \"#bababa\",\n            borderRight: \"black 2px solid\",\n            borderBottom: \"black 2px solid\"\n        }\n        style2 = {\n            backgroundColor: \"#ebebeb\"\n        }\n    }\n\n    function handleClick(event) {\n        props.onChangeSetting(event.target.attributes.name.nodeValue, event.target.attributes.value.nodeValue)\n    }\n\n    return (\n        <div className='draft-type'>\n            <div className='type-button' name='draftTab' value='Build Deck' style={style1} onClick={handleClick}>\n                Build Deck\n            </div>\n            <div className='type-button' name='draftTab' value='Upgrade' style={style2} onClick={handleClick}>\n                Upgrade\n            </div>\n        </div>\n    )\n}\n\nexport default SettingsType","import React from 'react'\n\nfunction SettingsChaos(props) {\n    return (\n        <div className=\"draftSettingsDraft\">\n        </div>\n    )\n}\n\nexport default SettingsChaos","import React from 'react'\n\nfunction SettingsDraft(props) {\n\n    function handleChange(event) {\n        props.onChangeSetting(event.target.name, event.target.value)\n    }\n\n    return (\n        <div>\n            <label>Cards to select from:</label>\n            <span className=\"draft-option\">\n                <input type=\"range\" min=\"2\" max=\"15\" step=\"1\" value={props.draftCount} className=\"slider\" name=\"draftCount1\" onChange={handleChange}/>\n                <span className=\"sliderValue\">{props.draftCount}</span>\n            </span>\n        </div>\n    )\n}\n\nexport default SettingsDraft","import React from 'react'\n\nfunction SettingsPhase(props) {\n    return (\n        <div className=\"draftphaseDiv\">\n            <h4 style={{padding: \"0 0 5px 0\"}}>Stage {props.phase}</h4>\n            <label>Cards to select from:</label>\n            <span className='draftphase-option'>\n                <input type=\"range\" min=\"1\" max=\"15\" value={props.draftCount} className=\"slider\" name=\"draftCount\" onChange={props.onChangeSetting}/>\n                <span className=\"sliderValue\">{props.draftCount}</span>\n            </span>\n            <br />\n            <label>Cards selected in this stage: </label>\n            <span className='draftphase-option'>\n                <input type=\"range\" min=\"0\" max={props.maxCards} value={props.draftCards} className=\"slider\" name=\"draftCards\" onChange={props.onChangeSetting}/>\n                <span className=\"sliderValue\">{props.draftCards}</span>\n            </span>\n            <br />\n            <label>Include cards with limited deck slots:</label>\n            <span className='draftphase-option'>\n                <input type=\"checkbox\" checked={props.draftUseLimited} name=\"draftUseLimited\" className=\"checkbox\" onChange={props.onChangeSetting}/>\n            </span>\n        </div>\n    )\n}\n\nexport default SettingsPhase","import React from 'react'\n\nimport SettingsPhase from './SettingsPhase'\n\nfunction SettingsPhasedDraft(props) {\n    let limit2 = props.deckSize - props.draftCards[0]\n    let limit3 = limit2 - props.draftCards[1]\n    let limit4 = limit3 - props.draftCards[2]\n\n    let warningText2 = null\n    let warningText3 = null\n    let warningStyle2 = {}\n    let warningStyle3 = {}\n    let warningStyle4 = {}\n\n    if (limit2 < props.draftCards[1]) {\n        if (limit2 > 0) warningText2 = \"Only \" + limit2\n        else warningText2 = \"No\"\n\n        warningStyle2 = {display: \"block\"}\n    } else {\n        warningStyle2 = {display: \"none\"}\n    }\n\n    if (limit3 < props.draftCards[2]) {\n        if (limit3 > 0) warningText3 = \"Only \" + limit3\n        else warningText3 = \"No\"\n\n        warningStyle3 = {display: \"block\"}\n        if (limit3 < 0) limit3 = 0;\n    } else {\n        warningStyle3 = {display: \"none\"}\n    }\n\n    if (limit4 > 0) {\n        warningStyle4 = {display: \"block\"}\n    } else {\n        warningStyle4 = {display: \"none\"}\n    }\n\n    function handleChange1(event) {\n        props.onChangeSetting(event.target.name + '1', event.target.value)\n    }\n\n    function handleChange2(event) {\n        props.onChangeSetting(event.target.name + '2', event.target.value)\n    }\n\n    function handleChange3(event) {\n        props.onChangeSetting(event.target.name + '3', event.target.value)\n    }\n\n    return (\n        <div className=\"draftSettingsDraft\">\n            <SettingsPhase phase=\"1\" draftCount={props.draftCount[0]} draftCards={props.draftCards[0]} draftUseLimited={props.draftUseLimited[0]} maxCards={props.deckSize} onChangeSetting={handleChange1} />\n            <SettingsPhase phase=\"2\" draftCount={props.draftCount[1]} draftCards={props.draftCards[1]} draftUseLimited={props.draftUseLimited[1]} maxCards={props.deckSize} onChangeSetting={handleChange2} />\n            <SettingsPhase phase=\"3\" draftCount={props.draftCount[2]} draftCards={props.draftCards[2]} draftUseLimited={props.draftUseLimited[2]} maxCards={props.deckSize} onChangeSetting={handleChange3} />\n            <div className=\"warning\" style={warningStyle2}>\n                <b>Warning:</b> {warningText2} cards will be drawn in Phase 2.\n            </div>\n            <div className=\"warning\" style={warningStyle3}>\n                <b>Warning:</b> {warningText3} cards will be drawn in Phase 3.\n            </div>\n            <div className=\"warning\" style={warningStyle4}>\n                <b>Warning:</b> The final {limit4} cards will be drawn at random.\n            </div>\n        </div>\n    )\n}\n\nexport default SettingsPhasedDraft\n","import React from 'react'\n\nimport SettingsChaos from './SettingsChaos'\nimport SettingsDraft from './SettingsDraft'\nimport SettingsPhasedDraft from './SettingsPhasedDraft'\n\nfunction SettingsBuild(props) {\n    function handleChange(event) {\n        props.onChangeSetting(event.target.name, event.target.value)\n    }\n\n    let draftSettings\n    let draftDescription\n\n    if (props.draftType === 'chaos') {\n        draftSettings = <SettingsChaos \n            onChangeSetting={props.onChangeSetting}\n        />\n        draftDescription = <div className=\"description\">\n            The original Ultimatum of Chaos rules from the 2017 Invocation Event.  A \n            full deck will be created completely randomly from all cards available to \n            the chosen investigator.\n        </div>\n    }\n    else if (props.draftType === 'draft') {\n        draftSettings = <SettingsDraft\n            draftCount={props.draftCount[0]} \n            onChangeSetting={props.onChangeSetting}\n        />\n        draftDescription = <div className=\"description\">\n            Select cards one by one from a random display of cards available to the \n            chosen investigator.  Each card will be selected from a number of cards \n            determined by the \"Cards to select from\" option.  \n        </div>\n    }\n    else if (props.draftType === 'phaseDraft') {\n        draftSettings = <SettingsPhasedDraft\n            draftCount={props.draftCount} \n            draftCards={props.draftCards}\n            draftUseLimited={props.draftUseLimited}\n            deckSize={props.deckSize} \n            onChangeSetting={props.onChangeSetting}\n        />\n        draftDescription = <div className=\"description\">\n            The draft will proceed through 3 distinct stages.  All stages will draft \n            from the full set of cards available to the chosen investigator.  Each stage \n            will draft a number of cards equal to \"Cards selected in this stage\", not \n            including Permanent cards.  Each will be selected from a number of cards \n            determined by the \"Cards to select from\" option.  This allows you to use \n            completely random selection for part of the deck, or use a wider range of \n            choices for part of the deck.\n        </div>\n    }\n\n    const myriadText = props.myriadCount === '1' ? 'card' : 'cards'\n\n    return (\n        <div className=\"draftsettings\">\n            <label>Type:</label>\n            <span className='draft-option'>\n                <select name=\"draftType\" value={props.draftType} onChange={handleChange}>\n                    <option value=\"chaos\">Standard chaos</option>\n                    <option value=\"draft\">Simple draft</option>\n                    <option value=\"phaseDraft\">Draft in stages</option>\n                </select>\n            </span>\n            <label>Drafting myriad adds:</label>\n            <span className='draft-option'>\n                <select style={{width: '25%'}} name=\"myriadCount\" value={props.myriadCount} onChange={handleChange}>\n                    <option value=\"1\">1</option>\n                    <option value=\"2\">2</option>\n                    <option value=\"3\">3</option>\n                </select>\n                <label style={{textAlign: \"left\"}}> {myriadText}</label>\n            </span>\n            {draftSettings}\n            {draftDescription}\n        </div>\n    )\n}\n\nexport default SettingsBuild","import React from 'react'\n\nimport SettingsChaos from './SettingsChaos'\nimport SettingsDraft from './SettingsDraft'\n\nfunction SettingsUpgrade(props) {\n    function handleChange(event) {\n        props.onChangeSetting(event.target.name, event.target.value)\n    }\n\n    let draftSettings\n\n    if (props.draftType === 'chaos') draftSettings = <SettingsChaos \n        onChangeSetting={props.onChangeSetting}\n    />\n    else if (props.draftType === 'draft') draftSettings = <SettingsDraft\n        draftCount={props.draftCount[0]} \n        onChangeSetting={props.onChangeSetting}\n    />\n\n    //const myriadText = props.myriadCount === '1' ? 'card' : 'cards'\n\n    return (\n        <div className=\"draftsettings\">\n        <label>Type:</label>\n        <span className='draft-option'>\n            <select name=\"draftType\" value={props.draftType} onChange={handleChange}>\n                <option value=\"chaos\">Standard chaos</option>\n                <option value=\"draft\">Simple draft</option>\n            </select>\n        </span>\n        <label>Weighting:</label>\n        <span className='draft-option'>\n            <select name=\"draftWeighting\" value={props.draftWeighting} onChange={handleChange}>\n                <option value=\"low\">Prefer low XP</option>\n                <option value=\"medium\">Default</option>\n                <option value=\"high\">Prefer high XP</option>\n            </select>\n        </span>\n        <label>XP:</label>\n        <span className='draft-option'>\n            <input style={{width: '23%'}} name=\"draftXP\" type=\"number\" value={props.draftXP} min=\"1\" onChange={handleChange}></input>\n        </span>\n        {draftSettings}\n    </div>\n    )\n}\n\nexport default SettingsUpgrade","import React from 'react'\n\nimport SettingsType from './SettingsType'\nimport SettingsBuild from './SettingsBuild'\nimport SettingsUpgrade from './SettingsUpgrade'\n\nfunction Settings(props) {\n    function handleStart(event) {\n        props.onChangeSetting('building', true)\n    }\n\n    const draftSettings = props.draftTab === 'Build Deck' ?\n        <SettingsBuild \n            draftType={props.draftType}\n            draftCount={props.draftCount}\n            draftCards={props.draftCards}\n            draftUseLimited={props.draftUseLimited}\n            deckSize={props.deckSize}\n            myriadCount={props.myriadCount}\n            onChangeSetting={props.onChangeSetting}\n        /> :\n        <SettingsUpgrade \n            draftType={props.draftType}\n            draftWeighting={props.draftWeighting}\n            draftXP={props.draftXP}\n            draftCount={props.draftCount}\n            draftCards={props.draftCards}\n            deckSize={props.deckSize}\n            myriadCount={props.myriadCount}\n            onChangeSetting={props.onChangeSetting}\n        />\n\n    const button = props.ready\n        ? (props.draftTab === 'Upgrade' || props.filteredCount >= props.deckSize \n            ? <button className=\"button-rect button-green\" onClick={handleStart}>Start</button>\n            : <div>\n                <br />\n                <p style={{color: 'red'}}>There are not enough cards in the selected packs to draft a complete deck.  Add packs in Collection Options.</p>\n                <button className=\"button-rect button-red\">Error</button>\n              </div>)\n        : <button className=\"button-rect button-red\">Loading...</button>\n\n    return (\n        <div className='settingsDiv'>\n            <SettingsType draftTab={props.draftTab} onChangeSetting={props.onChangeSetting}/>\n            <h3>Draft Options</h3>\n            <h5>{props.draftTab}</h5>\n            {draftSettings}\n            {button}\n        </div>\n    )\n}\n\nexport default Settings","const PackData = {\n    'core': 'Core set',\n    'core2': 'Second core set',\n    'dwl': 'The Dunwich Legacy',\n    'tmm': 'The Miskatonic Museum',\n    'tece': 'The Essex County Express',\n    'bota': 'Blood on the Altar',\n    'uau': 'Undimensioned and Unseen',\n    'wda': 'Where Doom Awaits',\n    'litas': 'Lost in Time and Space',\n    'ptc': 'The Path to Carcosa',\n    'eotp': 'Echoes of the Past',\n    'tuo': 'The Unspeakable Oath',\n    'apot': 'A Phantom of Truth',\n    'tpm': 'The Pallid Mask',\n    'bsr': 'Black Stars Rise',\n    'dca': 'Dim Carcosa',\n    'tfa': 'The Forgotten Age',\n    'tof': 'Threads of Fate',\n    'tbb': 'The Boundary Beyond',\n    'hote': 'Heart of the Elders',\n    'tcoa': 'The City of Archives',\n    'tdoy': 'The Depths of Yoth',\n    'sha': 'Shattered Aeons',\n    'tcu': 'The Circle Undone',\n    'tsn': 'The Secret Name',\n    'wos': 'The Wages of Sin',\n    'fgg': 'For the Greater Good',\n    'uad': 'Union and Disillusion',\n    'icc': 'In the Clutches of Chaos',\n    'bbt': 'Before the Black Throne',\n    'tde': 'The Dream Eaters',\n    'sfk': 'The Search for Kadath',\n    'tsh': 'A Thousand Shapes of Horror',\n    'dsm': 'Dark Side of the Moon',\n    'pnr': 'Point of No Return',\n    'wgd': 'Where the Gods Dwell',\n    'woc': 'Weaver of the Cosmos',\n    'tic': 'The Innsmouth Conspiracy',\n    'itd': 'In Too Deep',\n    'def': 'Devil Reef',\n    'hhg': 'Horror in High Gear',\n    'lif': 'A Light in the Fog',\n    'lod': 'The Lair of Dagon',\n//    'itm': 'Into the Maelstrom',\n    'nat': 'Nathaniel Cho',\n    'har': 'Harvey Walters',\n    'win': 'Winifred Habbamock',\n    'jac': 'Jacqueline Fine',\n    'ste': 'Stella Clark',\n    'rtnotz': 'Return to the Night of the Zealot',\n    'rtdwl': 'Return to the Dunwich Legacy',\n    'rtptc': 'Return to the Path to Carcosa',\n    'rttfa': 'Return to the Forgotten Age'\n}\n\nexport default PackData","import React from 'react'\nimport PackData from '../../components/PackData'\n\nfunction CollectionCycle(props) {\n    const { collectionSets, includedSets, columnValue } = props\n\n    function handleChange(event) {\n        if (event.target.name === 'core' && !event.target.checked) props.onChangeSetting('collectionSetOff', includedSets)\n        else if (event.target.name === 'core2' && event.target.checked) props.onChangeSetting('collectionSetOn', includedSets)\n        else if (event.target.checked) props.onChangeSetting('collectionSetOn', [event.target.name])\n        else props.onChangeSetting('collectionSetOff', [event.target.name])\n\n//        if (event.target.name === 'core') {\n//            if (!event.target.checked) props.onChangeSetting('collectionSetOff', ['core2'])\n//        }\n    }\n\n    function handleSelect(event) {\n        props.onChangeSetting('collectionSetOn', includedSets)\n    }\n\n    function handleDeselect(event) {\n        props.onChangeSetting('collectionSetOff', includedSets)\n    }\n\n    const checkboxes = includedSets.map( code => {\n        return (\n            <div className=\"pack-option\" key={code}>\n                <input type=\"checkbox\" checked={collectionSets[code]} name={code} className=\"set-checkbox\" onChange={handleChange}/>\n                <label className=\"set-label\">{PackData[code]}</label>\n            </div>\n        )\n    })\n\n    return (\n        <div className={'cardSet ' + columnValue}>\n            <h4 className=\"set-header\">{props.header ? props.header : PackData[includedSets[0]]}</h4>\n\n            {checkboxes}\n\n            <div style={{position: \"absolute\", right: \"0\", top: \"0\", width: \"40%\"}}>\n                <button className=\"button-deselectset\" value=\"deselect\" title=\"Deselect all\" onClick={() => handleDeselect()}/>\n                <button className=\"button-selectset\" value=\"select\" title=\"Select all\" onClick={() => handleSelect()}/>\n            </div>\n        </div>\n    )\n}\n\nexport default CollectionCycle\n","import React from 'react'\nimport CollectionCycle from './CollectionCycle'\n\nfunction CollectionSettings(props) {\n    const { expandCollection, collectionSets, onChangeSetting } = props\n\n\n    function handleExpand(event) {\n        props.onChangeSetting('expandCollection', !expandCollection)\n    }\n\n    // I'm lazy, just gonna hard code this... (also avoids incomplete ArkhamDB entries)\n    if (expandCollection) {\n        return (\n            <div className=\"settingsDiv\">\n                <h3>Collection Options</h3>\n                <div className=\"cardContainer\">\n                    <CollectionCycle \n                        collectionSets={collectionSets}\n                        includedSets={['core', 'core2']}\n                        columnValue='colcenter'\n                        onChangeSetting={onChangeSetting}\n                    />\n                </div>\n                <div className=\"cardContainer\">\n                    <CollectionCycle \n                        collectionSets={collectionSets}\n                        includedSets={['dwl', 'tmm', 'tece', 'bota', 'uau', 'wda', 'litas']}\n                        columnValue='col1'\n                        onChangeSetting={onChangeSetting}\n                    />\n                    <CollectionCycle \n                        collectionSets={collectionSets}\n                        includedSets={['ptc', 'eotp', 'tuo', 'apot', 'tpm', 'bsr', 'dca']}\n                        columnValue='col2'\n                        onChangeSetting={onChangeSetting}\n                    />\n                </div>\n                <div className=\"cardContainer\">\n                    <CollectionCycle \n                        collectionSets={collectionSets}\n                        includedSets={['tfa', 'tof', 'tbb', 'hote', 'tcoa', 'tdoy', 'sha']}\n                        columnValue='col1'\n                        onChangeSetting={onChangeSetting}\n                    />\n                    <CollectionCycle \n                        collectionSets={collectionSets}\n                        includedSets={['tcu', 'tsn', 'wos', 'fgg', 'uad', 'icc', 'bbt']}\n                        columnValue='col2'\n                        onChangeSetting={onChangeSetting}\n                    />\n                </div>\n                <div className=\"cardContainer\">\n                    <CollectionCycle \n                        collectionSets={collectionSets}\n                        includedSets={['tde', 'sfk', 'tsh', 'dsm', 'pnr', 'wgd', 'woc']}\n                        columnValue='col1'\n                        onChangeSetting={onChangeSetting}\n                    />\n                    <CollectionCycle \n                        collectionSets={collectionSets}\n                        includedSets={['tic', 'itd', 'def', 'hhg', 'lif', 'lod']}\n                        columnValue='col2'\n                        onChangeSetting={onChangeSetting}\n                    />\n                </div>\n                <div className=\"cardContainer\">\n                    <CollectionCycle \n                        collectionSets={collectionSets}\n                        includedSets={['nat', 'har', 'win', 'jac', 'ste']}\n                        header='Starter Decks'\n                        columnValue='col1'\n                        onChangeSetting={onChangeSetting}\n                    />\n                    <CollectionCycle \n                        collectionSets={collectionSets}\n                        includedSets={['rtnotz', 'rtdwl', 'rtptc', 'rttfa']}\n                        header='Return to Boxes'\n                        columnValue='col2'\n                        onChangeSetting={onChangeSetting}\n                    />\n                </div>\n\n                <button className=\"button-rect button-green\" onClick={handleExpand}>Collapse</button>\n            </div>\n        )\n    }\n    else {\n        var coreCount = collectionSets['core'] + collectionSets['core2']\n        var packCount = 0\n        for (var code in collectionSets) {\n            if (collectionSets[code] === 1) packCount++\n        }\n        packCount -= coreCount\n\n        return (\n            <div className=\"settingsDiv\">\n                <h3>Collection Options</h3>\n                <p>{coreCount} core set{coreCount === 1 ? null : 's'}, {packCount} pack{packCount === 1 ? null : 's'} selected</p>\n                <button className=\"button-rect button-green\" onClick={handleExpand}>Expand</button>\n            </div>\n        )\n    }\n}\n\nexport default CollectionSettings\n","import React from 'react'\n\nfunction CardList(props) {\n    const { cardList, cardData, updateCardOverlay } = props\n\n    let assetCount = 0\n    let eventCount = 0\n    let skillCount = 0\n    let otherCount = 0\n    const hand = []\n    const hand2 = []\n    const arcane = []\n    const arcane2 = []\n    const accessory = []\n    const body = []\n    const ally = []\n    const tarot = []\n    const otherasset = []\n    const permanent = []\n    const event = []\n    const skill = []\n    const other = []\n\n    cardList.forEach(item => {\n        if (item.type_code === 'event') {\n            event.push(item)\n            eventCount += item.count\n        }\n        else if (item.type_code === 'skill') {\n            skill.push(item)\n            skillCount += item.count\n        }\n        else if (item.type_code === 'asset') {\n            if (item.permanent) permanent.push(item)\n            else if (item.slot === 'Hand') hand.push(item)\n            else if (item.slot === 'Hand x2') hand2.push(item)\n            else if (item.slot === 'Arcane') arcane.push(item)\n            else if (item.slot === 'Arcane x2') arcane2.push(item)\n            else if (item.slot === 'Accessory') accessory.push(item)\n            else if (item.slot === 'Body') body.push(item)\n            else if (item.slot === 'Ally') ally.push(item)\n            else if (item.slot === 'Tarot') tarot.push(item)\n            else otherasset.push(item)\n            assetCount += item.count\n        }\n        else {\n            other.push(item)\n            otherCount += item.count\n        }\n    })\n\n    function onEnterCard(event) {\n        const cardArray = cardData.filter(item => item.code === event.target.id)\n\n        if (cardArray && cardArray.length > 0) {\n            const imagesrc = \"http://www.arkhamdb.com\" + cardArray[0].imagesrc\n\n            updateCardOverlay(imagesrc, event.clientX)\n        }\n    }\n/*\n    function onEnterCardRight(event) {\n        const cardArray = cardData.filter(item => item.code === event.target.id)\n\n        if (cardArray && cardArray.length > 0) {\n            const imagesrc = \"http://www.arkhamdb.com\" + cardArray[0].imagesrc\n\n            updateCardOverlay(imagesrc, \"Left\")\n        }\n    }\n*/\n    function onLeaveCard(event) {\n        updateCardOverlay(null, 0)\n    }\n\n    const assetHeader = assetCount > 0 ? <h4>Assets ({assetCount})</h4> : null\n    \n    const handHeader = hand.length > 0 ? <p className='slot-header'>Hand</p> : null\n    const handContents = hand.sort((a, b) => (a.name > b.name) ? 1 : -1).map((item, index) => {\n        const countStr = item.count > 1 ? ' x' + item.count : null\n\n        return <p id={item.key} onPointerEnter={onEnterCard} onPointerLeave={onLeaveCard} key={index}>{item.name}{countStr}</p>\n    })\n\n    const hand2Header = hand2.length > 0 ? <p className='slot-header'>Hand x2</p> : null\n    const hand2Contents = hand2.sort((a, b) => (a.name > b.name) ? 1 : -1).map((item, index) => {\n        const countStr = item.count > 1 ? ' x' + item.count : null\n\n        return <p id={item.key} onPointerEnter={onEnterCard} onPointerLeave={onLeaveCard} key={index}>{item.name}{countStr}</p>\n    })\n\n    const arcaneHeader = arcane.length > 0 ? <p className='slot-header'>Arcane</p> : null\n    const arcaneContents = arcane.sort((a, b) => (a.name > b.name) ? 1 : -1).map((item, index) => {\n        const countStr = item.count > 1 ? ' x' + item.count : null\n\n        return <p id={item.key} onPointerEnter={onEnterCard} onPointerLeave={onLeaveCard} key={index}>{item.name}{countStr}</p>\n    })\n\n    const arcane2Header = arcane2.length > 0 ? <p className='slot-header'>Arcane x2</p> : null\n    const arcane2Contents = arcane2.sort((a, b) => (a.name > b.name) ? 1 : -1).map((item, index) => {\n        const countStr = item.count > 1 ? ' x' + item.count : null\n\n        return <p id={item.key} onPointerEnter={onEnterCard} onPointerLeave={onLeaveCard} key={index}>{item.name}{countStr}</p>\n    })\n\n    const accessoryHeader = accessory.length > 0 ? <p className='slot-header'>Accessory</p> : null\n    const accessoryContents = accessory.sort((a, b) => (a.name > b.name) ? 1 : -1).map((item, index) => {\n        const countStr = item.count > 1 ? ' x' + item.count : null\n\n        return <p id={item.key} onPointerEnter={onEnterCard} onPointerLeave={onLeaveCard} key={index}>{item.name}{countStr}</p>\n    })\n\n    const bodyHeader = body.length > 0 ? <p className='slot-header'>Body</p> : null\n    const bodyContents = body.sort((a, b) => (a.name > b.name) ? 1 : -1).map((item, index) => {\n        const countStr = item.count > 1 ? ' x' + item.count : null\n\n        return <p id={item.key} onPointerEnter={onEnterCard} onPointerLeave={onLeaveCard} key={index}>{item.name}{countStr}</p>\n    })\n\n    const allyHeader = ally.length > 0 ? <p className='slot-header'>Ally</p> : null\n    const allyContents = ally.sort((a, b) => (a.name > b.name) ? 1 : -1).map((item, index) => {\n        const countStr = item.count > 1 ? ' x' + item.count : null\n\n        return <p id={item.key} onPointerEnter={onEnterCard} onPointerLeave={onLeaveCard} key={index}>{item.name}{countStr}</p>\n    })\n\n    const tarotHeader = tarot.length > 0 ? <p className='slot-header'>Tarot</p> : null\n    const tarotContents = tarot.sort((a, b) => (a.name > b.name) ? 1 : -1).map((item, index) => {\n        const countStr = item.count > 1 ? ' x' + item.count : null\n\n        return <p id={item.key} onPointerEnter={onEnterCard} onPointerLeave={onLeaveCard} key={index}>{item.name}{countStr}</p>\n    })\n\n    const otherassetHeader = otherasset.length > 0 ? <p className='slot-header'>Other</p> : null\n    const otherassetContents = otherasset.sort((a, b) => (a.name > b.name) ? 1 : -1).map((item, index) => {\n        const countStr = item.count > 1 ? ' x' + item.count : null\n\n        return <p id={item.key} onPointerEnter={onEnterCard} onPointerLeave={onLeaveCard} key={index}>{item.name}{countStr}</p>\n    })\n\n    const permanentHeader = permanent.length > 0 ? <p className='slot-header'>Permanent</p> : null\n    const permanentContents = permanent.sort((a, b) => (a.name > b.name) ? 1 : -1).map((item, index) => {\n        const countStr = item.count > 1 ? ' x' + item.count : null\n\n        return <p id={item.key} onPointerEnter={onEnterCard} onPointerLeave={onLeaveCard} key={index}>{item.name}{countStr}</p>\n    })\n\n    const eventHeader = eventCount > 0 ? <h4>Events ({eventCount})</h4> : null\n    const eventContents = event.sort((a, b) => (a.name > b.name) ? 1 : -1).map((item, index) => {\n        const countStr = item.count > 1 ? ' x' + item.count : null\n\n        return <p id={item.key} onPointerEnter={onEnterCard} onPointerLeave={onLeaveCard} key={index}>{item.name}{countStr}</p>\n    })\n\n    const skillHeader = skillCount > 0 ? <h4>Skills ({skillCount})</h4> : null\n    const skillContents = skill.sort((a, b) => (a.name > b.name) ? 1 : -1).map((item, index) => {\n        const countStr = item.count > 1 ? ' x' + item.count : null\n\n        return <p id={item.key} onPointerEnter={onEnterCard} onPointerLeave={onLeaveCard} key={index}>{item.name}{countStr}</p>\n    })\n\n    const otherHeader = otherCount > 0 ? <h4>Other ({otherCount})</h4> : null\n    const otherContents = other.sort((a, b) => (a.name > b.name) ? 1 : -1).map((item, index) => {\n        const countStr = item.count > 1 ? ' x' + item.count : null\n\n        return <p id={item.key} onPointerEnter={onEnterCard} onPointerLeave={onLeaveCard} key={index}>{item.name}{countStr}</p>\n    })\n\n    return (\n        <div className=\"settingsDiv\">\n            <h3 style={{marginBottom: \"-10px\"}}>Card List</h3>\n            <div className=\"cardContainer\">\n                <div className=\"col1\">\n                    {assetHeader}\n                    {handHeader}\n                    {handContents}\n                    {hand2Header}\n                    {hand2Contents}\n                    {arcaneHeader}\n                    {arcaneContents}\n                    {arcane2Header}\n                    {arcane2Contents}\n                    {accessoryHeader}\n                    {accessoryContents}\n                    {bodyHeader}\n                    {bodyContents}\n                    {allyHeader}\n                    {allyContents}\n                    {tarotHeader}\n                    {tarotContents}\n                    {otherassetHeader}\n                    {otherassetContents}\n                    {permanentHeader}\n                    {permanentContents}\n                </div>\n                <div className=\"col2\">\n                    {eventHeader}\n                    {eventContents}\n                    {skillHeader}\n                    {skillContents}\n                    {otherHeader}\n                    {otherContents}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default CardList\n","import React from 'react'\n\nfunction DraftArea(props) {\n    const { draftCount, draftPool, draftCard, draftType, phase, cardList, updateCardList, updateDraftPool  } = props\n\n    let newList = []\n    newList = newList.concat(cardList)\n\n    function handleClick(event) {\n        const index = draftPool.findIndex(item => {\n            return event.target.src.includes(item.imagesrc)\n        })\n    \n        const updatedList = draftCard(draftPool[index], newList)\n\n        updateCardList(updatedList)\n        updateDraftPool([])\n    }\n\n    let images = []\n\n    for (let i = 0; i < draftCount; i++) {\n        let imageSrc = \"https://www.arkhamdb.com\" + draftPool[i].imagesrc\n        if (imageSrc === undefined) imageSrc = ''\n\n        images.push(<div className=\"draft-card\" key={i}><img className=\"draft-image\" src={imageSrc} alt={draftPool[i].name} onClick={handleClick}/></div>)\n    }\n\n    const phaseText = draftType === 'phaseDraft' ? ' - Stage ' + phase : null\n\n    return (\n        <div className=\"settingsDiv\">\n            <h3>Draft{phaseText}</h3>\n            <div className='draft-container'>\n                {images}\n            </div>\n            <p>Click image to draft card</p>\n        </div>\n    )\n}\n\nexport default DraftArea","import PackData from '../components/PackData'\n\nfunction ExportDeck(props) {\n    const { fileType, deckTitle, investigator, cardList, specialCards, cardData } = props\n\n    if (cardData === undefined || !cardData) return\nconsole.log(deckTitle.length)\n\n    const asset = []\n    const event = []\n    const skill = []\n    const treachery = []\n    const enemy = []\n    const other = []\n\n    // we're getting card info from CardData now, not the items...\n    const investigatorCard = cardData\n    .filter(item => {\n        return item.name === investigator\n    })[0]\n\n    cardList.concat(specialCards).forEach(listItem => {\n        const card = cardData.filter(dataItem => {\n            return listItem.key === dataItem.code\n        })[0]\n\n        let dataObject = {\n            name: listItem.name,\n            subname: card.subname,\n            count: listItem.count,\n            xp: card.xp,\n            pack: card.pack_code,\n            octgn_id: card.octgn_id\n        }\n\n        if (card.type_code === 'event') {\n            event.push(dataObject)\n        }\n        else if (card.type_code === 'skill') {\n            skill.push(dataObject)\n        }\n        else if (card.type_code === 'asset') {\n            asset.push(dataObject)\n        }\n        else if (card.type_code === 'treachery') {\n            treachery.push(dataObject)\n        }\n        else if (card.type_code === 'enemy') {\n            enemy.push(dataObject)\n        }\n        else {\n            other.push(dataObject)\n        }\n    })\n\n    if (fileType === 'OCTGN') ExportO8D({\n        deckTitle: (deckTitle.length > 0 ? deckTitle : 'Deck'),\n        investigator: investigatorCard,\n        assets: asset,\n        events: event,\n        skills: skill,\n        treacheries: treachery,\n        enemies: enemy,\n        others: other\n    })\n\n    else ExportTXT({\n        deckTitle: (deckTitle.length > 0 ? deckTitle : 'Deck'),\n        investigator: investigatorCard,\n        assets: asset,\n        events: event,\n        skills: skill,\n        treacheries: treachery,\n        enemies: enemy,\n        others: other\n    })\n}\n\nfunction ExportO8D(props) {\n    var deckTextData = ['<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?>\\r\\n',\n        '<deck game=\"a6d114c7-2e2a-4896-ad8c-0330605c90bf\" sleeveid=\"0\">\\r\\n',\n        '  <section name=\"Investigator\" shared=\"False\">\\r\\n'\n    ]\n    \n    const o8dids = props.investigator.octgn_id.split(':')\n\n    o8dids.forEach( item => {\n        deckTextData.push('    <card qty=\"1\" id=\"' + item + '\">' + props.investigator.name.replace(/[\"]/g, '&quot;') + '</card>\\r\\n')\n    })\n\n    deckTextData.push('  </section>\\r\\n')\n\n    if (props.assets.length > 0) {\n        deckTextData.push('  <section name=\"Asset\" shared=\"False\">\\r\\n')\n\n        props.assets.forEach( item => {\n            deckTextData.push('    <card qty=\"' + item.count + '\" id=\"' + item.octgn_id + '\">' + item.name.replace(/[\"]/g, '&quot;') + '</card>\\r\\n')\n        })    \n\n        deckTextData.push('  </section>\\r\\n')\n    }\n\n    if (props.events.length > 0) {\n        deckTextData.push('  <section name=\"Event\" shared=\"False\">\\r\\n')\n\n        props.events.forEach( item => {\n            deckTextData.push('    <card qty=\"' + item.count + '\" id=\"' + item.octgn_id + '\">' + item.name.replace(/[\"]/g, '&quot;') + '</card>\\r\\n')\n        })    \n\n        deckTextData.push('  </section>\\r\\n')\n    }\n\n    if (props.skills.length > 0) {\n        deckTextData.push('  <section name=\"Skill\" shared=\"False\">\\r\\n')\n\n        props.skills.forEach( item => {\n            deckTextData.push('    <card qty=\"' + item.count + '\" id=\"' + item.octgn_id + '\">' + item.name.replace(/[\"]/g, '&quot;') + '</card>\\r\\n')\n        })    \n\n        deckTextData.push('  </section>\\r\\n')\n    }\n\n    if (props.treacheries.length > 0 || props.enemies.length > 0) {\n        deckTextData.push('  <section name=\"Weakness\" shared=\"False\">\\r\\n')\n\n        if (props.treacheries.length > 0) {\n            props.treacheries.forEach( item => {\n                deckTextData.push('    <card qty=\"' + item.count + '\" id=\"' + item.octgn_id + '\">' + item.name.replace(/[\"]/g, '&quot;') + '</card>\\r\\n')\n            })    \n        }\n\n        if (props.enemies.length > 0) {\n            props.enemies.forEach( item => {\n                deckTextData.push('    <card qty=\"' + item.count + '\" id=\"' + item.octgn_id + '\">' + item.name.replace(/[\"]/g, '&quot;') + '</card>\\r\\n')\n            })    \n        }\n\n        deckTextData.push('  </section>\\r\\n')\n    }\n\n    if (props.others.length > 0) {\n        deckTextData.push('  <section name=\"Other\" shared=\"False\">\\r\\n')\n\n        props.others.forEach( item => {\n            deckTextData.push('    <card qty=\"' + item.count + '\" id=\"' + item.octgn_id + '\">' + item.name.replace(/[\"]/g, '&quot;') + '</card>\\r\\n')\n        })    \n\n        deckTextData.push('  </section>\\r\\n')\n    }\n\n    deckTextData.push('<notes><![CDATA[]]></notes>\\r\\n')\n    deckTextData.push('</deck>\\r\\n')\n\n    const element = document.createElement(\"a\")\n    const file = new Blob(deckTextData, {type: 'text/plain'})\n    element.href = URL.createObjectURL(file)\n    element.download = props.deckTitle.replace(/\\s/g, '-') + \".o8d\"\n    document.body.appendChild(element) // Required for this to work in FireFox\n    element.click()\n    document.body.removeChild(element)\n}\n\nfunction ExportTXT(props) {\n    var deckTextData = []\n    \n    deckTextData.push(props.deckTitle + '\\r\\n\\r\\n')\n    deckTextData.push(props.investigator.name + '\\r\\n\\r\\n')\n\n    if (props.assets.length > 0) {\n        deckTextData.push('Assets\\r\\n')\n\n        props.assets.forEach( item => {\n            const subtitle = (item.subname !== undefined) ? ':' + item.subname : ''\n            const level = (item.xp !== undefined && item.xp > 0) ? ' [' + item.xp + '] ' : ' '\n\n            deckTextData.push(item.count + 'x ' + item.name + subtitle + level + '(' + PackData[item.pack] + ')\\r\\n')\n        })    \n\n        deckTextData.push('\\r\\n')\n    }\n\n    if (props.events.length > 0) {\n        deckTextData.push('Events\\r\\n')\n\n        props.events.forEach( item => {\n            const subtitle = (item.subname !== undefined) ? ':' + item.subname : ''\n            const level = (item.xp !== undefined && item.xp > 0) ? ' [' + item.xp + '] ' : ' '\n\n            deckTextData.push(item.count + 'x ' + item.name + subtitle + level + '(' + PackData[item.pack] + ')\\r\\n')\n        })    \n\n        deckTextData.push('\\r\\n')\n    }\n\n    if (props.skills.length > 0) {\n        deckTextData.push('Skills\\r\\n')\n\n        props.skills.forEach( item => {\n            const subtitle = (item.subname !== undefined) ? ':' + item.subname : ''\n            const level = (item.xp !== undefined && item.xp > 0) ? ' [' + item.xp + '] ' : ' '\n\n            deckTextData.push(item.count + 'x ' + item.name + subtitle + level + '(' + PackData[item.pack] + ')\\r\\n')\n        })    \n\n        deckTextData.push('\\r\\n')\n    }\n\n    if (props.treacheries.length > 0) {\n        deckTextData.push('Treachery\\r\\n')\n\n        props.treacheries.forEach( item => {\n            const subtitle = (item.subname !== undefined) ? ':' + item.subname : ''\n            const level = (item.xp !== undefined && item.xp > 0) ? ' [' + item.xp + '] ' : ' '\n\n            deckTextData.push(item.count + 'x ' + item.name + subtitle + level + '(' + PackData[item.pack] + ')\\r\\n')\n        })    \n\n        deckTextData.push('\\r\\n')\n    }\n\n\n    if (props.enemies.length > 0) {\n        deckTextData.push('Enemy\\r\\n')\n\n        props.enemies.forEach( item => {\n            const subtitle = (item.subname !== undefined) ? ':' + item.subname : ''\n            const level = (item.xp !== undefined && item.xp > 0) ? ' [' + item.xp + '] ' : ' '\n\n            deckTextData.push(item.count + 'x ' + item.name + subtitle + level + '(' + PackData[item.pack] + ')\\r\\n')\n        })    \n\n        deckTextData.push('\\r\\n')\n    }\n\n    if (props.others.length > 0) {\n        deckTextData.push('Other\\r\\n')\n\n        props.others.forEach( item => {\n            const subtitle = (item.subname !== undefined) ? ':' + item.subname : ''\n            const level = (item.xp !== undefined && item.xp > 0) ? ' [' + item.xp + '] ' : ' '\n\n            deckTextData.push(item.count + 'x ' + item.name + subtitle + level + '(' + PackData[item.pack] + ')\\r\\n')\n        })    \n\n        deckTextData.push('\\r\\n')\n    }\n\n    const element = document.createElement(\"a\")\n    const file = new Blob(deckTextData, {type: 'text/plain'})\n    element.href = URL.createObjectURL(file)\n    element.download = props.deckTitle.replace(/\\s/g, '-') + \".txt\"\n    document.body.appendChild(element) // Required for this to work in FireFox\n    element.click()\n    document.body.removeChild(element)\n}\n\nexport default ExportDeck","import React, { useState } from 'react';\nimport ExportDeck from '../ExportDeck'\n\nfunction SettingsExport(props) {\n    const [useSignatures, changeUseSignatures] = useState([ true, false, false])\n    const [basicWeakness, changeBasicWeakness] = useState(['Random basic weakness', '01000'])\n    const [deckTitle, changeDeckTitle] = useState('')\n\n    const { investigator, deckSize, cardData, collectionSets, updateCardOverlay } = props\n    \n    function handleInput(event) {\n        changeDeckTitle(event.target.value)\n    }\n\n    function handleCheckbox(event) {\n        var index = 0\n\n        if (event.target.name === 'CB2') index = 2\n        else if (event.target.name === 'CB1') index = 1\n\n        var newSignatures = { ...useSignatures }\n        newSignatures[index] = event.target.checked\n\n        changeUseSignatures(newSignatures)\n    }\n\n    function onEnterCard(event) {\n        // basic weakness\n        if (event.target.id === '01000') return\n\n        const cardArray = cardData.filter(item => item.code === event.target.id)\n\n        if (cardArray && cardArray.length > 0) {\n            const imagesrc = \"http://www.arkhamdb.com\" + cardArray[0].imagesrc\n\n            updateCardOverlay(imagesrc, event.clientX)\n        }\n    }\n\n    function onLeaveCard(event) {\n        updateCardOverlay(null, 0)\n    }\n\n    function handleWeaknessClick() {\n        var weaknessCount = 0\n\n        for (let i = 0; i < weaknessCards.length; i++) {\n            weaknessCount += weaknessCards[i].quantity\n        }\n\n        var weaknessRoll = Math.floor(Math.random()*weaknessCount)\n\n        for (let i = 0; i < weaknessCards.length; i++) {\n            if (weaknessRoll <= 0) {\n                changeBasicWeakness([weaknessCards[i].name, weaknessCards[i].code])\n                break\n            }\n            \n            weaknessRoll -= weaknessCards[i].quantity\n        }\n    }\n\n    function handleExportClick(fileType) {\n        var specialCards = []\n\n//        for (let i = 0; i < signatureCards.length; i++) {\n        for (let [signatureIndex, signatureArray] of signatureCards.entries()) {\n            if (useSignatures[signatureIndex]) {\n                for (let j = 0; j < signatureArray.length; j++) {\n                    const cardID = Object.keys(cardData)\n                    .filter(key => {\n                        return cardData[key].code === signatureArray[j]\n                    })[0]\n                \n                    const card = cardData[cardID]\n                    let sigQuantity = card.quantity\n\n                    if (card.name === 'Occult Evidence') {\n                        if (deckSize === '50') sigQuantity = 3\n                        else if (deckSize === '40') sigQuantity = 2\n                        else sigQuantity = 1\n                    }\n\n                    specialCards.push({name: card.name, key: card.code, type_code: card.type_code, count: sigQuantity })\n                }\n            }\n        }\n\n        const weaknessID = Object.keys(cardData)\n        .filter(key => {\n            return cardData[key].code === basicWeakness[1]\n        })[0]\n    \n        const weaknessCard = cardData[weaknessID]\n        if (!weaknessCard.octgn_id) weaknessCard.octgn_id = ''\n\n        specialCards.push({name: weaknessCard.name, key: weaknessCard.code, type_code: weaknessCard.type_code, count: 1 })\n\n        ExportDeck({\n            fileType: fileType,\n            deckTitle: deckTitle,\n            investigator: props.investigator,\n            cardList: props.cardList,\n            specialCards: specialCards,\n            cardData: props.cardData\n        })\n    }\n\n    var signatureCards = [ [], [], [] ]\n\n    const investigatorID = Object.keys(cardData)\n    .filter(key => {\n        return cardData[key].name === investigator\n    })[0]\n\n    const investigatorCard = cardData[investigatorID]\n\n    const cardRequirements = investigatorCard.deck_requirements.card\n    var useCheckbox = false\n\n    for (let crkey = 0; crkey < Object.keys(cardRequirements).length; crkey++) {\n        const requirement = cardRequirements[Object.keys(cardRequirements)[crkey]]\n\n        if (Object.keys(requirement).length > 1) useCheckbox = true\n\n        for (let rkey = 0; rkey < Object.keys(requirement).length; rkey++) {\n            signatureCards[rkey].push(requirement[Object.keys(requirement)[rkey]])\n        }\n    }\n\n    signatureCards.sort( (a1, a2) => {\n        if (a1.length > 0) {\n            if (a2.length > 0) {\n                return parseInt(a1[0]) - parseInt(a2[0])\n            }\n            else return -1\n        }\n\n        return 1\n    })\n\n    // make sure it's selected in the collection too\n    var weaknessCards = cardData.filter( card => {\n        return card.subtype_code === 'basicweakness' && card.code !== '01000' && collectionSets[card.pack_code]\n    })\n\n    var signatureOptions = <div>\n        {\n            signatureCards.map( (item, index) => {\n                if (item.length > 0) {\n                    const cardList = item.map( code => {\n                        var signatureID = Object.keys(cardData)\n                        .filter(key => {\n                            return cardData[key].code === code\n                        })[0]\n\n                        let sigQuantity = cardData[signatureID].quantity\n\n                        if (cardData[signatureID].name === 'Occult Evidence') {\n                            if (deckSize === '50') sigQuantity = 3\n                            else if (deckSize === '40') sigQuantity = 2\n                            else sigQuantity = 1\n                        }\n\n                        const quantityText = (sigQuantity > 1) ? ' x' + sigQuantity : ''\n\n                        return (useCheckbox ?\n                            <p id={cardData[signatureID].code} key={cardData[signatureID].code} onPointerEnter={onEnterCard} onPointerLeave={onLeaveCard}>{cardData[signatureID].name + ' (' + cardData[signatureID].pack_name + ')' + quantityText}</p> :\n                            <p id={cardData[signatureID].code} key={cardData[signatureID].code} onPointerEnter={onEnterCard} onPointerLeave={onLeaveCard}>{cardData[signatureID].name + quantityText}</p>)\n                    })\n\n                    return (useCheckbox ?\n                        <div key={index} className=\"signatureDiv\">\n                            <span className=\"signatureLeft\">\n                                <input type=\"checkbox\" checked={useSignatures[index]} name={\"CB\" + index} className=\"signature-checkbox\" onChange={handleCheckbox}/>\n                            </span>\n                            <span className=\"signatureRight\">\n                                {cardList}\n                            </span>\n                        </div>\n                        :\n                        <div key={index} className=\"signatureDiv\">\n                            <span className=\"signatureCenter\">\n                                {cardList}\n                            </span>\n                        </div>\n                    )\n                }\n                else return null\n            })\n        }\n        </div>\n\n    return (\n        <div className=\"settingsDiv\">\n            <h3 style={{marginBottom: '-5px'}}>Export options</h3>\n            <div className=\"exportsettings\">\n                <label>Deck title:</label>\n                <span className=\"export-option\">\n                    <input className=\"deckName\" name=\"deckName\" type='text' value={deckTitle} onChange={handleInput}></input>\n                </span>\n            </div>\n            <div>\n                <h4 style={{marginBottom: '5px'}}>Signature cards</h4>\n                {signatureOptions}\n            </div>\n            <div>\n                <h4 style={{marginBottom: '5px'}}>Weaknesses</h4>\n                <p id={basicWeakness[1]} onPointerEnter={onEnterCard} onPointerLeave={onLeaveCard}>{basicWeakness[0]}</p>\n                <button className='button-rect button-green button-drawweakness' onClick={ () => handleWeaknessClick()}>Draw weakness</button>\n                <div className=\"description\">\n                    Export as an OCTGN deck file.  To import a downloaded .o8d deck into ArkhamDB, go to My Decks and click Import Deck, then File.\n                </div>\n            </div>\n            <div>\n                <button className='button-rect button-green button-export' onClick={ () => handleExportClick('OCTGN')}>Export as .o8d</button>\n            </div>\n        </div>\n    )\n}\n//<button className='button-rect button-green button-export' onClick={ () => handleExportClick('text')}>Export as .txt</button>\n\nexport default SettingsExport","import React from 'react'\n\nimport CardList from './CardList'\nimport DraftArea from './DraftArea'\nimport ExportSettings from '../options/ExportSettings'\n\nfunction Draft(props) {\n    const { investigator, deckSize, draftTab, draftXP, draftCount, draftProgress, draftType, phase, cardList, draftPool, cardData, draftCard, updateCardList, updateDraftPool, resetApp, collectionSets, updateCardOverlay } = props\n\n    let investigatorCardImage = null\n    let investigatorCardImageBack = null\n        \n    if (cardData) {\n        const investigatorID = Object.keys(cardData)\n        .filter(key => {\n            return  cardData[key].name === investigator\n        })[0]\n\n        const imagesrc = \"https://www.arkhamdb.com\" + cardData[investigatorID].imagesrc\n        const backimagesrc = \"https://www.arkhamdb.com\" + cardData[investigatorID].backimagesrc\n        investigatorCardImage = <img className=\"investigator-image\" src={imagesrc} alt={props.investigator} />\n        investigatorCardImageBack = <img className=\"investigator-image\" src={backimagesrc} alt={props.investigator + ' (back)'} />\n    }\n\n    let draftContent = null\n    let exportContent = null\n\n    if (draftPool.length > 0) {\n        draftContent = <DraftArea \n            draftCount={draftCount}\n            draftCard={draftCard}\n            phase={phase}\n            draftType={draftType}\n            draftPool={draftPool}\n            cardList={cardList}\n            updateCardList={updateCardList}\n            updateDraftPool={updateDraftPool}\n        />\n    }\n    else if (draftTab === 'Build Deck') {\n        exportContent = <ExportSettings\n            investigator={investigator}\n            deckSize={deckSize}\n            cardList={cardList}\n            cardData={cardData}\n            collectionSets={collectionSets}\n            updateCardOverlay={updateCardOverlay}\n        />\n    }\n\n    const progress = draftTab === 'Build Deck' ? \n        <p><b>Cards: </b>{draftProgress}/{deckSize}</p> : \n        <p><b>XP: </b>{draftProgress}/{draftXP}</p>\n\n    return (\n        <div>\n            <div className=\"settingsDiv\">\n                <h2>{investigator}</h2>\n                {investigatorCardImage}\n                {investigatorCardImageBack}\n                {progress}\n            </div>\n            {draftContent}\n            <CardList \n                cardList={cardList}\n                cardData={cardData}\n                updateCardOverlay={updateCardOverlay}\n            />\n            {exportContent}\n            <button className='button-rect button-green' onClick={resetApp}>Restart</button>\n        </div>\n    )\n}\n\nexport default Draft","// card data:\n// pack_code\n// pack_name\n// type_code\n        // treachery\n        // investigator\n        // asset\n        // event\n        // skill\n        // enemy\n        // story\n        // location\n// type_name\n// subtype_code\n// faction_code\n// faction_name\n// position\n// exceptional\n// myriad\n// code\n// name\n// real_name\n// subname\n// text\n// real_text\n// quantity\n// skill_willpower\n// skill_intellect\n// skill_combat\n// skill_agility\n// clues_fixed\n// health\n// health_per_investigator\n// sanity\n// deck_limit\n// traits\n// real_traits\n// deck_requirements\n// deck_options\n// flavor\n// illustrator\n// is_unique\n// exile\n// hidden\n// permanent\n// double_sided\n// back_text\n// back_flavor\n// octgn_id\n// url\n// imagesrc\n// backimagesrc\n\n// slot\n    // Hand\n    // Accessory\n    // Ally\n    // Hand x2\n    // Arcane\n    // Body\n    // Tarot\n// restrictions\n// cost\n// xp\n\nfunction FilterCards(props) {\n    const { investigator, secondaryClass, cardData, cardList, deckSize, upgrade, draftUseLimited, draftXP, collectionSets } = props\n\n    const investigatorID = Object.keys(cardData)\n    .filter(key => {\n        return cardData[key].name === investigator\n    })[0]\n\n    const deckOptions = cardData[investigatorID].deck_options\n\n    const filteredDeck = filterDeckForLimited(cardList, deckOptions)\n\n    // requirement trait: exclude if it doesn't pass a different option AND the requirement\n    let requirementOptions = null\n\n    if (investigator === 'Joe Diamond') {\n        const joeRequiredCards = cardList.filter(item => {\n            const cardTraits = item.traits\n\n            if (cardTraits && cardTraits.search(new RegExp('insight', \"i\")) >= 0)\n                return true\n\n            return false\n        })\n\n        if (deckSize - countDeck(cardList) + countDeck(joeRequiredCards) <= 10) {\n            requirementOptions = [{\n                requirement: 10,\n                trait: 'insight'\n            }]\n        }\n    }\n    else if (investigator === 'Lola Hayes') {\n        const lolaRequiredCards = ['guardian', 'seeker', 'rogue', 'mystic', 'survivor'].map(faction => {\n            return {\n                faction: faction,\n                count: countDeck(cardList.filter(item => {\n                    if (item.faction_code === faction) {\n                        return true\n                    }\n                    if (item.faction2_code === faction) {\n                        return true\n                    }\n\n                    return false\n                }))\n            }\n        }).sort((e1, e2) => e2.count - e1.count)\n\n        let count = 0\n        for (let i = 0; i < 3; i++) {\n            count += Math.min(7, lolaRequiredCards[i].count)\n        }\n\n        if (deckSize - countDeck(cardList) + count <= 21) {\n            const minCount = lolaRequiredCards[2].count\n\n            let factionRequirement = []\n            for (let i = 0; i < 5; i++) {\n                if (lolaRequiredCards[i].count < 7 && lolaRequiredCards[i].count >= minCount) factionRequirement.push(lolaRequiredCards[i].faction)\n            }\n\n            requirementOptions = [{\n                requirement: 7,\n                faction: factionRequirement\n            }]\n        }\n    }\n\n    let minLevel = 0\n    let maxLevel = 0\n\n    if (upgrade) {\n        minLevel = 1\n        maxLevel = draftXP\n    }\n//console.log('Filter : ' + props.draftXP)\n    const filteredData = cardData.filter(card => {\n        if (card.type_code === 'investigator') return false\n        if (card.type_code === 'story') return false\n        if (card.type_code === 'location') return false\n        if (card.type_code === 'enemy') return false\n        if (card.type_code === 'treachery') return false\n        if (card.bonded_to) return false\n        // currently means weakness\n        if (card.subtype_code) return false\n\n        let xp = 0\n        if (card.xp) xp = card.xp\n        if (card.tabooxp !== undefined) xp += card.tabooxp\n        if (card.exceptional || (card.tabooexceptional !== undefined && card.tabooexceptional)) xp *= 2\n\n        if (xp < minLevel) return false\n        if (xp > maxLevel) return false\n\n//        arcane research!!!! oh no!!\n//        green man medallion as well\n\n        if (card.restrictions && card.restrictions.investigator) return false\n        if (!collectionSets[card.pack_code]) return false\n\n        if (card.duplicate_of_code) {\n            const duplicateID = Object.keys(cardData)\n            .filter(key => {\n                return cardData[key].code === card.duplicate_of_code\n            })[0]\n\n            const duplicateCard = cardData[duplicateID]\n\n            // if the set of the card that this card is duplicating is included, don't include this\n            if (collectionSets[duplicateCard.pack_code]) return false\n        }\n\n        // restricted list, normal limit test only happens on cards already in deck\n        if (card.taboodecklimit !== undefined && card.taboodecklimit === 0) return false\n\n        // this isn't right for upgrades yet\n        let legal = false\n        let rejected = false\n\n        for (let i = 0; i < deckOptions.length; i++) {\n            if (deckOptions[i].requirement) continue\n\n            let optionLegal = false\n\n            if (testDeckOption(card, deckOptions[i])) {\n                optionLegal = true\n\n                if (deckOptions[i].not) {\n//console.log('Reject : ' + card.name)\n//                    optionLegal = false\n                    rejected = true\n                }\n                else if (deckOptions[i].limit) {\n                    if (!draftUseLimited) optionLegal = false\n                    else {\n                        const inDeck = countDeckLimited(filteredDeck, deckOptions[i])\n//console.log('In deck : ' + inDeck)\n                        if (inDeck >= deckOptions[i].limit) {\n//console.log('Over limit : ' + card.name)\n                            optionLegal = false\n                        }\n                    }\n                }\n            }\n\n            if (optionLegal) legal = true\n        }\n//console.log(legal)\n//console.log(rejected)\n        if (!legal || rejected) return false\n\n        // check to see if there's already max in the deck\n        let limited = false\n        \n        cardList.forEach(item => {\n            if (item.name === card.name && !(card.subtitle !== undefined && item.subtitle !== card.subtitle)) {\n                var deckLimit = card.deck_limit\n                if (card.taboodecklimit !== undefined) {\n                    deckLimit = card.taboodecklimit\n//                    console.log('TabooDeckLimit : ' + card.taboodecklimit)\n                }\n\n                var quantity = card.quantity\n\n                if (card.pack_code === 'core' && collectionSets['core2'] === 0 && quantity < deckLimit) deckLimit = quantity\n\n                if (item.count >= deckLimit) {\n//console.log(card.name + ' : Over the limit')\n                    limited = true\n                }\n            }\n        })\n\n        if (limited) return false\n\n        // check to see if it passes all required tests\n        if (requirementOptions) {\n            for (let i = 0; i < requirementOptions.length; i++) {\n                if (!testDeckOption(card, requirementOptions[i])) {\n                    return false\n                }\n            }\n        }\n\n        return true\n    })\n\n    function filterDeckForLimited(list, options) {\n        if (!list) return []\n\n        let filteredDeck = []\n\n        list.forEach(item => {\n            let legal = false\n\n            for (let i = 0; i < options.length; i++) {\n                if (options[i].limit) continue;\n\n                const optionLegal = testDeckOption(item, options[i])\n\n                if (optionLegal) legal = true\n            }\n\n            if (!legal) filteredDeck.push(item)\n        })\n\n        return filteredDeck\n    }\n    \n    function countDeck(list) {\n        let count = 0\n\n        if (list) {\n            list.forEach(item => {\n                if (!item.permanent) count += item.count\n            })\n        }\n\n        return count\n    }\n    \n    function countDeckLimited(list, option) {\n        let count = 0\n\n        if (list) {\n            list.forEach(item => {\n                if (testDeckOption(item, option)) {\n                    count += item.count\n                }\n            })\n        }\n\n        return count\n    }\n\n    function testDeckOption(card, option) {\n//console.log(option)\n        let level = true\n        let faction = true\n        let secondaryFaction = true\n        let trait = true\n        let uses = true\n        let type = true\n        let text = true\n\n        if (option.name === 'Secondary Class') {\n            secondaryFaction = false\n\n            if (card.faction_code === secondaryClass) {\n                secondaryFaction = true\n            }\n            if (card.faction2_code === secondaryClass) {\n                secondaryFaction = true\n            }\n        }\n\n        if (option.faction) {\n            faction = false\n\n            for (let f = 0; f < option.faction.length; f++) {\n                if (card.faction_code === option.faction[f]) {\n                    faction = true\n                }\n                if (card.faction2_code === option.faction[f]) {\n                    faction = true\n                }\n            }\n        } \n\n        if (option.level) {\n            level = false\n\n            const min = option.level.min\n            const max = option.level.max\n\n            const ixp = card.xp === undefined ? 0 : card.xp\n\n            if (ixp >= min && ixp <= max) level = true;\n        }\n\n        if (option.trait) {\n//console.log('Trait')\n//console.log(option.trait)\n            trait = false\n\n            const cardTraits = card.traits\n//console.log(cardTraits)\n            if (cardTraits && cardTraits.search(new RegExp(option.trait, \"i\")) >= 0)\n                trait = true\n//console.log(trait)\n            }\n\n        if (option.uses) {\n            uses = false\n\n            const cardText = card.text\n\n            if (cardText && cardText.search(new RegExp('Uses \\\\([0-9\\\\s]+' + option.uses[0] + '\\\\)', \"i\")) >= 0)\n                uses = true\n        }\n\n        if (option.type) {\n            type = false\n\n            const cardType = card.type_code\n\n            if (cardType && option.type.find(item => item === cardType))\n                type = true\n        }\n           \n        if (option.text) {\n            text = false\n            \n            if (card.text && card.text.search(new RegExp(option.text, \"i\")) >= 0)\n                text = true\n        }\n            \n//console.log(faction + ' ' + level + ' ' + trait + ' ' + uses + ' ' + type + ' ' + secondaryFaction)\n        return faction && level && trait && uses && type && secondaryFaction && text\n    }\n\n    return filteredData\n}\n\nexport default FilterCards\n\n/* odds research\n            // stat test\n            const setArray = [ 'core'\n                ,'dwl', 'tmm', 'tece', 'bota', 'uau', 'wda', 'litas'\n                ,'ptc', 'eotp', 'tuo', 'apot', 'tpm', 'bsr', 'dca'\n                ,'tfa', 'tof', 'tbb', 'hote', 'tcoa', 'tdoy', 'sha'\n                ,'tcu', 'tsn', 'wos', 'fgg', 'uad', 'icc', 'bbt'\n                ,'tde', 'sfk', 'tsh', 'dsm', 'pnr', 'wgd', 'woc'\n                ,'rtnotz', 'rtdwl', 'rtptc'\n            ]\n\n//            const assets = countCards('asset', setArray)\n//            const events = countCards('event', setArray)\n//            const skills = countCards('skill', setArray)\n\n            const hand = countCards('asset', 'Hand', setArray)\n            const hands2 = countCards('asset', 'Hand x2', setArray)\n            const ally = countCards('asset', 'Ally', setArray)\n            const accessory = countCards('asset', 'Accessory', setArray)\n            const arcane = countCards('asset', 'Arcane', setArray)\n            const body = countCards('asset', 'Body', setArray)\n            const tarot = countCards('asset', 'Tarot', setArray)\n\n//            console.log('Assets: ' + assets)\n//            console.log('Events: ' + events)\n//            console.log('Skills: ' + skills)\n\n            console.log('Hand: ' + hand)\n            console.log('Ally: ' + ally)\n            console.log('Arcane: ' + arcane)\n            console.log('2xHands: ' + hands2)\n            console.log('Accessory: ' + accessory)\n            console.log('Body: ' + body)\n            conso le.log('Tarot: ' + tarot)\n*/\n/* odds research\n    function countCards(cardType, cardSlot, sets) {\n        const filteredData = cardData.filter(card => {\n            // currently means weakness\n            if (card.type_code !== cardType) return false\n            if (card.subtype_code) return false\n            if (card.slot && card.slot !== cardSlot) return false\n            if (!card.slot) return false\n//            if (card.xp && card.xp > 0) return false            \n            if (card.restrictions && card.restrictions.investigator) return false\n    //        console.log(card.slot + ' <=> ' + cardSlot + ' (' + card.name + ')')\n    \n            let foundSet = false\n            for (let i = 0; i < sets.length; i++) {\n                if (card.pack_code === sets[i]) foundSet = true\n            }\n\n            return foundSet\n        })\n\n        return filteredData.length\n    }\n*/\n\n","import React, { useState, useEffect } from 'react'\n\nimport './App.css';\n\nimport InvestigatorSettings from './components/options/InvestigatorSettings'\nimport Settings from './components/options/Settings'\nimport CollectionSettings from './components/options/CollectionSettings'\n\nimport Draft from './components/draft/Draft'\nimport FilterCards from './components/DraftFilters'\n\nfunction useWindowSize() {\n    const [windowSize, setWindowSize] = useState({width: undefined, height: undefined})\n\n    useEffect( () => {\n        function handleResize() {\n            setWindowSize({\n                width: window.innerWidth,\n                height: window.innerHeight\n            })\n        }\n\n        window.addEventListener(\"resize\", handleResize)\n\n        handleResize()\n\n        return () => window.removeEventListnener(\"resize\", handleResize)\n    }, [])\n\n    return windowSize\n}\n\nfunction App(props) {\n    let contents = null\n\n    const [overlayImage, updateOverlayImage] = useState(null)\n    const [overlayPosition, updateOverlayPosition] = useState('Left\"')\n\n    const windowSize = useWindowSize()\n\n    function updateCardOverlay(image, xloc) {\n        updateOverlayImage(image)\n    \n        if (xloc < windowSize['width']/2) updateOverlayPosition('Right')\n        else updateOverlayPosition('Left')\n    }\n    \n    let overlay = null\n\n    if (overlayImage) {\n        overlay = <div className={\"floatingImage\"+overlayPosition}><img src={overlayImage} alt=\"\" /></div>\n    }\n\n    if (props.fetchError) {\n        contents = \n            <div>\n                Fetch error!\n            </div>\n    }\n    else if (!props.cardData || !props.tabooData) {\n        contents =\n            <div style={{marginBottom: \"20px\"}}>\n                Loading...\n            </div>\n    }\n    else if (props.building) {\n        contents = \n            <Draft\n                draftType={props.draftType}\n                draftTab={props.draftTab}\n                investigator={props.investigator} \n                secondaryClass={props.secondaryClass} \n                deckSize={props.deckSize}\n                draftXP={props.draftXP}\n                draftCount={props.draftCount[props.phase-1]}\n                draftCards={props.draftCards[props.phase-1]}\n                draftProgress={props.draftProgress}\n                phase={props.phase}\n                cardList={props.cardList}\n                cardData={props.cardData}\n                collectionSets={props.collectionSets}\n                draftPool={props.draftPool}\n                draftCard={props.draftCard}\n                updateCardList={props.updateCardList}\n                updateDraftPool={props.updateDraftPool}\n                updateCardOverlay={updateCardOverlay}\n                resetApp={props.resetApp}\n            />\n    }\n    else {\n        // do we have enough cards??\n        var filteredCount = 0\n\n        const filteredCards = FilterCards({\n            investigator: props.investigator,\n            secondaryClass: props.secondaryClass,\n            deckSize: props.deckSize,\n//            draftCount: draftCount[phase-1],\n            draftUseLimited: [true, true, true],\n            draftXP: props.draftXP,\n            upgrade: (props.draftTab === 'Upgrade'),\n            cardList: props.cardList,\n            cardData: props.cardData,\n            collectionSets: props.collectionSets\n//            draftCard: draftCard\n            })\n\n        filteredCards.forEach( card => {\n            if (!card.deck_limit) return\n            if (!(card.type_code === 'asset' || card.type_code === 'event' || card.type_code === 'skill')) return\n            if (card.subtype_code === 'weakness' || card.subtype_code === 'basicweakness') return\n            if (!props.collectionSets[card.pack_code] || props.collectionSets[card.pack_code] === 0) return\n            if (card.restrictions) {\n                if (card.restrictions['investigator']) return\n            }\n\n            var cardLimit = card.deck_limit\n            var quantity = card.quantity\n\n            if (props.collectionSets[card.pack_code] === 1) {\n                if (card.pack_code === 'core' && props.collectionSets['core2'] === 0 && quantity < cardLimit) cardLimit = quantity\n            }\n\n            filteredCount += cardLimit\n        })\n\n        // there has to be enough extra to allow for a final card choice\n        if (props.draftType === 'chaos') filteredCount -= 2\n        else filteredCount -= 30    // max of 15 draft options * counting 2 each in filteredCount\n\n        contents = \n        <div>\n            <InvestigatorSettings \n                investigator={props.investigator}\n                secondaryClass={props.secondaryClass}\n                selectedDeckSize={props.selectedDeckSize}\n                selectedTaboo={props.selectedTaboo}\n                deckSize={props.deckSize}\n                cardData={props.cardData}\n                tabooData={props.tabooData}\n                onChangeSetting={props.handleChange}\n            />\n            <CollectionSettings \n                expandCollection={props.expandCollection}\n                collectionSets={props.collectionSets}\n                onChangeSetting={props.handleChange}\n            />\n            <Settings\n                draftTab={props.draftTab}\n                draftType={props.draftType}\n                draftWeighting={props.draftWeighting}\n                draftXP={props.draftXP}\n                draftCount={props.draftCount}\n                draftCards={props.draftCards}\n                draftUseLimited={props.draftUseLimited}\n                deckSize={props.deckSize}\n                ready={props.ready}\n                filteredCount={filteredCount}\n                myriadCount={props.myriadCount}\n                onChangeSetting={props.handleChange}\n            />\n        </div>\n    }\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n            ArkhamDraft\n            </header>\n            {contents}\n            {overlay}\n            <div className=\"copyright\" style={{padding: \"5px\", boxSizing: \"border-box\"}}>\n                Arkham Horror: The Card Game and all information presented here, both literal and graphical, is copyrighted by Fantasy Flight Games. This website is not produced, endorsed, supported, or affiliated with Fantasy Flight Games.\n            </div>\n        </div>\n    )\n}\n\nexport default App;\n","function DrawCard(cardData, draftPool) {\n    let legal = false\n    let randomCard = null\n\n    if (cardData.length === 0) return null\n\n    while (!legal) {\n        randomCard = cardData[Math.floor(Math.random() * cardData.length)]\n\n        const randomCode = randomCard.code\n        const existingIndex = (draftPool && draftPool.length > 0) ? draftPool.findIndex(item => item.code === randomCode) : -1\n        \n        if (existingIndex < 0) legal = true\n    }\n\n    return randomCard\n}\n\nexport default DrawCard","import React, { useState, useEffect, useCallback } from 'react';\n\nimport App from './App';\nimport DrawCard from './components/DraftData'\nimport FilterCards from './components/DraftFilters'\n\nfunction fetchData(updateCardData, updateFetchError) {\n//        fetch(\"https://cors-anywhere.herokuapp.com/https://arkhamdb.com/api/public/cards/\")\n    fetch(\"https://arkhamdb.com/api/public/cards/\")\n    .then(res => {\n        return res.json()\n    })\n    .then(res => {\n        updateCardData(res)\n    })\n    .catch(() => updateFetchError(true))\n}\n\nfunction fetchTaboo(updateTabooData, updateFetchError) {\n//        fetch(\"https://cors-anywhere.herokuapp.com/https://arkhamdb.com/api/public/cards/\")\n    fetch(\"https://arkhamdb.com/api/public/taboos/\")\n    .then(res => {\n        return res.json()\n    })\n    .then(res => {\n        res = res.map(item => {\n            item.cards = JSON.parse(item.cards)\n            return item\n        }).sort((item1, item2) => item1.id > item2.id ? 1 : -1)\n\n        updateTabooData(res)\n    })\n    .catch(() => updateFetchError(true))\n}\n\nfunction mergeTabooData(cData, tData) {\n    var tCardData = cData.map(item => {\n        delete item.tabooxp\n        delete item.tabooexceptional\n        delete item.taboodecklimit\n\n        var tabooEntry = null\n        \n        if (tData.length > 0) tabooEntry = tData[0].cards.filter(taboo => taboo.code === item.code)\n\n        if (tabooEntry) {\n            tabooEntry.forEach(taboo => {\n                if (taboo.xp !== undefined) item.tabooxp = taboo.xp\n                if (taboo.exceptional !== undefined && taboo.exceptional) {\n                    item.tabooexceptional = true\n                    item.taboodecklimit = 1\n                }\n                if (taboo.deck_limit !== undefined) {\n                    item.taboodecklimit = taboo.deck_limit\n                }\n            })\n        }\n        \n        return item\n    })\n\n    return tCardData\n}\n\nfunction standardChaosDraft(props) {\n    const { draftTab, draftCards, draftXP, draftCard, cardList, investigator } = props;\n    let newList = []\n\n    newList = newList.concat(cardList)\n\n    let draftProgress = 0;\n\n    let upgrading = (draftTab === 'Upgrade Deck')\n\n    let draftTarget = draftCards\n    if (upgrading) draftTarget = draftXP\n\n    while (draftProgress < draftTarget) {\n        // generates all cards, sets cardList state\n        // need to do it each iteration for all investigators whose filter depends on the cards in the deck\n        props.cardList = newList\n        let filteredData = FilterCards(props)\n\n        const card = DrawCard(filteredData)\n\n        newList = draftCard(card, newList)\n\n        draftProgress = 0;\n\n        if (draftTab === 'Build Deck') {\n            for (let item in newList) {\n                // permanent don't count\n                if (!newList[item].permanent) draftProgress += newList[item].count\n            }\n\n            if (investigator === 'Joe Diamond' || investigator === 'Lola Hayes') {\n                props.cardList = newList\n                filteredData = FilterCards(props)\n            }\n        }\n        else {\n            for (let item in newList) {\n                draftProgress += newList[item].xp * newList[item].count\n            }\n\n            props.cardList = newList\n            props.draftXP = draftTarget - draftProgress\n\n            filteredData = FilterCards(props)\n        }\n    }\n\n    return newList\n}\n\nfunction simpleDraft(props) {\n    const { draftCount } = props\n\n    // generates draft cards\n    const filteredData = FilterCards(props)\n\n    let draftPool = []\n\n    for (let i = 0; i < draftCount; i++) {\n        const card = DrawCard(filteredData, draftPool)\n\n        draftPool.push(card)\n    }\n\n    return draftPool\n}\n\nfunction AppContainer() {\n    const [investigator, changeInvestigator] = useState(\"Agnes Baker\")\n    const [secondaryClass, changeSecondaryClass] = useState(null)\n    const [selectedDeckSize, changeSelectedDeckSize] = useState(null)\n    const [selectedTaboo, changeSelectedTaboo] = useState('None')\n    const [deckSize, changeDeckSize] = useState(\"30\")\n    const [draftTab, changeDraftTab] = useState(\"Build Deck\")\n    const [draftType, changeDraftType] = useState(\"draft\")\n    const [draftWeighting, changeDraftWeighting] = useState('medium')\n    const [draftXP, changeDraftXP] = useState(1)\n    const [draftCount, changeDraftCount] = useState([3, 3, 3])\n    const [draftCards, changeDraftCards] = useState([10, 10, 10])\n    const [draftUseLimited, changeDraftUseLimited] = useState([true, true, true])\n    const [building, changeBuilding] = useState(false)\n    const [newPhase, changeNewPhase] = useState(true)\n//    const [fetching, changeFetching] = useState(false)\n    const [cardData, updateCardData] = useState(null)\n    const [tabooData, updateTabooData] = useState(null)\n//    const [tabooCardData, updateTabooCardData] = useState(null)\n    const [fetchError, updateFetchError] = useState(false)\n    const [cardList, updateCardList] = useState([])\n    const [draftPool, updateDraftPool] = useState([])\n    const [phase, changePhase] = useState(1)\n    const [complete, changeComplete] = useState(false)\n    const [myriadCount, updateMyriadCount] = useState('1')\n\n    const [collectionSets, updateCollectionSets] = useState({ 'core': 1, 'core2': 1\n        ,'dwl': 1, 'tmm': 1, 'tece': 1, 'bota': 1, 'uau': 1, 'wda': 1, 'litas': 1\n        ,'ptc': 1, 'eotp': 1, 'tuo': 1, 'apot': 1, 'tpm': 1, 'bsr': 1, 'dca': 1\n        ,'tfa': 1, 'tof': 1, 'tbb': 1, 'hote': 1, 'tcoa': 1, 'tdoy': 1, 'sha': 1\n        ,'tcu': 1, 'tsn': 1, 'wos': 1, 'fgg': 1, 'uad': 1, 'icc': 1, 'bbt': 1\n        ,'tde': 1, 'sfk': 1, 'tsh': 1, 'dsm': 1, 'pnr': 1, 'wgd': 1, 'woc': 1\n        ,'tic': 1, 'itd': 1, 'def': 1, 'hhg': 1, 'lif': 1, 'lod': 1, 'itm': 1\n        ,'rtnotz': 1, 'rtdwl': 1, 'rtptc': 1, 'rttfa': 1\n        ,'nat': 1, 'har': 1, 'win': 1, 'jac': 1, 'ste': 1\n        ,'books' : 0 })\n    const [expandCollection, changeExpandCollection] = useState(false)\n\n    // card count for Build, xp for Upgrade\n    let draftProgressBuild = 0\n    let draftProgressUpgrade = 0\n\n    if (cardList) {\n        for (let item in cardList) {\n            // permanent don't count\n            if (!cardList[item].permanent) draftProgressBuild += cardList[item].count\n            draftProgressUpgrade += cardList[item].xp * cardList[item].count;\n        }\n    }\n\n    useEffect(() => fetchData(updateCardData, updateFetchError), [])\n\n    useEffect(() => fetchTaboo(updateTabooData, updateFetchError), [])\n\n    const draftCard = useCallback((card, list) => {\n        let cardXP = 0\n    \n        if (card.xp) {\n            cardXP = card.xp\n        }\n        if (card.tabooxp !== undefined) cardXP += card.tabooxp\n        if (card.exceptional || (card.tabooexceptional !== undefined && card.tabooexceptional)) cardXP *= 2\n\n        let addCount = 1\n\n        // just let upgrade draft 1, they can choose however many they want\n        // Things like Empower Self are problematic...\n        if (draftTab === 'Build Deck') {\n            if (card.myriad) addCount = parseInt(myriadCount)\n            if (addCount > card.deck_limit) addCount = card.deck_limit\n            if (draftProgressBuild + addCount > deckSize) addCount = deckSize - draftProgressBuild;\n        }\n\n        if (list) {\n            const existingIndex = list.length > 0 ? list.findIndex(item => item.key === card.code) : -1\n    \n            if (existingIndex >= 0) {\n                list.map(item => {\n                    if (item.name === card.name) {\n                        item.count = item.count + addCount\n                        if (item.count > card.deck_limit) item.count = card.deck_limit\n    \n                        return item\n                    }\n    \n                    return item\n                })\n            }\n            else {\n                list.push({ name: card.name, subtitle: card.subtitle, key: card.code, type_code: card.type_code, slot: card.slot, faction_code: card.faction_code, faction2_code: card.faction2_code, traits: card.traits, xp: cardXP, permanent: card.permanent, count: addCount, duplicateKey: card.duplicate_of_code })\n            }\n        }\n        else {\n            list = [{ name: card.name, subtitle: card.subtitle, key: card.code, type_code: card.type_code, slot: card.slot, faction_code: card.faction_code, faction2_code: card.faction2_code, traits: card.traits, xp: cardXP, permanent: card.permanent, count: addCount, duplicateKey: card.duplicate_of_code }]\n        }\n    \n        return list\n    }, [myriadCount, draftProgressBuild, deckSize, draftTab])\n\n    useEffect(() => {\n        if (building && !complete) {\n            const draftProgress = (draftTab === 'Build Deck') ? draftProgressBuild : draftProgressUpgrade\n            let draftTarget = 0\n\n            if (draftTab === 'Build Deck') {\n                if (draftType === 'phaseDraft') {\n                    if (phase > 3) draftTarget = deckSize\n                    else for (let i = 0; i < phase; i++) draftTarget += parseInt(draftCards[i], 10)\n                    \n                    if (draftTarget > deckSize) draftTarget = deckSize\n                }\n                else {\n                    draftTarget = deckSize\n                }\n            }\n            else\n            {\n                draftTarget = draftXP\n            }\n\n            if (newPhase) {\n                if (draftType === 'chaos') {\n                    // first (and only) time through\n                    const list = standardChaosDraft({\n                        draftTab: draftTab,\n                        investigator: investigator,\n                        secondaryClass: secondaryClass,\n                        deckSize: deckSize,\n                        draftCards: draftTarget,\n                        draftXP: draftTarget,\n                        upgrade: (draftTab === 'Upgrade'),\n                        cardList: cardList,\n                        collectionSets: collectionSets,\n                        cardData: cardData,\n                        draftCard: draftCard\n                    })\n\n                    updateCardList(list)\n                    changeNewPhase(false)\n                    changeComplete(true)\n                }\n                else if (draftProgress < draftTarget) {\n                    if (draftCount[phase-1] === '1') {\n                        const list = standardChaosDraft({\n                            draftTab: draftTab,\n                            investigator: investigator,\n                            secondaryClass: secondaryClass,\n                            deckSize: deckSize,\n                            draftCards: draftTarget,\n                            draftXP: draftTarget,\n                            upgrade: (draftTab === 'Upgrade'),\n                            cardList: cardList,\n                            cardData: cardData,\n                            collectionSets: collectionSets,\n                            draftCard: draftCard\n                        })    \n     \n                        updateCardList(list)\n                        changePhase(phase + 1)\n                    }\n                    else {\n                        const pool = simpleDraft({\n                            investigator: investigator,\n                            secondaryClass: secondaryClass,\n                            deckSize: deckSize,\n                            draftCount: draftCount[phase-1],\n                            draftUseLimited: draftUseLimited[phase-1],\n                            draftXP: draftXP - draftProgress,\n                            upgrade: (draftTab === 'Upgrade'),\n                            cardList: cardList,\n                            cardData: cardData,\n                            collectionSets: collectionSets\n                            })\n \n                        updateDraftPool(pool)    \n                        changeNewPhase(false)\n                    }\n                }\n            }\n            else {\n                if (draftPool.length < 1) {\n                    if (draftType === 'draft') {\n                        if (draftProgress < draftTarget) {\n                            const pool = simpleDraft({\n                                investigator: investigator,\n                                secondaryClass: secondaryClass,\n                                deckSize: deckSize,\n                                draftCount: draftCount[phase-1],\n                                draftUseLimited: draftUseLimited[phase-1],\n                                draftXP: draftXP - draftProgress,\n                                upgrade: (draftTab === 'Upgrade'),\n                                cardList: cardList,\n                                cardData: cardData,\n                                collectionSets: collectionSets\n                            })\n\n                            updateDraftPool(pool)\n                        }\n                        else {\n                            changeComplete(true)\n                        }\n                    }\n                    else {\n                        if (draftProgress < draftTarget) {\n                            const pool = simpleDraft({\n                                investigator: investigator,\n                                secondaryClass: secondaryClass,\n                                deckSize: deckSize,\n                                draftCount: draftCount[phase-1],\n                                draftUseLimited: draftUseLimited[phase-1],\n                                draftXP: draftXP - draftProgress,\n                                upgrade: (draftTab === 'Upgrade'),\n                                cardList: cardList,\n                                cardData: cardData,\n                                collectionSets: collectionSets\n                            })\n   \n                            updateDraftPool(pool)\n                        }\n                        else {\n                            if (phase >= 3) {\n                                if (draftProgress < deckSize) {\n                                    const list = standardChaosDraft({\n                                        draftTab: draftTab,\n                                        investigator: investigator,\n                                        secondaryClass: secondaryClass,\n                                        deckSize: deckSize,\n                                        draftCards: deckSize - draftProgress,\n                                        draftXP: draftXP - draftProgress,\n                                        upgrade: (draftTab === 'Upgrade'),\n                                        cardList: cardList,\n                                        cardData: cardData,\n                                        collectionSets: collectionSets,\n                                        draftCard: draftCard\n                                    })    \n               \n                                    updateCardList(list)\n                                }\n                                \n                                changeComplete(true)\n                            }\n                            else {\n                                changePhase(phase + 1)\n                                changeNewPhase(true)\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }, [building, complete, newPhase, draftType, draftProgressBuild, draftProgressUpgrade, deckSize, investigator, cardList, cardData, tabooData, collectionSets, draftCount, draftUseLimited, phase, draftCards, draftPool, draftTab, draftXP, secondaryClass, draftCard])\n    \n    function handleChange(name, value) {\n        if (name === 'investigator') {\n            changeInvestigator(value)\n\n            if (cardData && !selectedDeckSize) {\n                const investigatorID = Object.keys(cardData)\n                .filter(key => {\n                    return  cardData[key].name === value\n                })[0]\n\n                changeDeckSize(cardData[investigatorID].deck_requirements.size)\n\n                const classOptions = cardData[investigatorID].deck_options.filter(item => item.name === 'Secondary Class')\n\n                if (classOptions.length > 0) {\n                    changeSecondaryClass(classOptions[0].faction_select[0])\n                }\n            }\n        }\n        else if (name === 'secondaryClass') changeSecondaryClass(value)\n        else if (name === 'selectedDeckSize') {\n            changeSelectedDeckSize(value)\n            changeDeckSize(value)\n        }\n        else if (name === 'draftTab') changeDraftTab(value)\n        else if (name === 'draftType') changeDraftType(value)\n        else if (name === 'draftWeighting') changeDraftWeighting(value)\n        else if (name === 'draftXP') changeDraftXP(value)\n        else if (name === 'draftCount1') doChangeDraftCount(1, value)\n        else if (name === 'draftCount2') doChangeDraftCount(2, value)\n        else if (name === 'draftCount3') doChangeDraftCount(3, value)\n        else if (name === 'draftCards1') doChangeDraftCards(1, value)\n        else if (name === 'draftCards2') doChangeDraftCards(2, value)\n        else if (name === 'draftCards3') doChangeDraftCards(3, value)\n        else if (name === 'draftUseLimited1') doChangeDraftUseLimited(1, value)\n        else if (name === 'draftUseLimited2') doChangeDraftUseLimited(2, value)\n        else if (name === 'draftUseLimited3') doChangeDraftUseLimited(3, value)\n        else if (name === 'taboo') changeSelectedTaboo(value)\n        else if (name === 'myriadCount') updateMyriadCount(value)\n        else if (name === 'expandCollection') changeExpandCollection(value)\n        else if (name === 'collectionSetOn') {\n            var addCollectionSets = { ...collectionSets }\n            \n            value.forEach( set => {\n                addCollectionSets[set] = 1\n            })\n\n            updateCollectionSets(addCollectionSets)\n        }\n        else if (name === 'collectionSetOff') {\n            var removeCollectionSets = { ...collectionSets }\n\n            value.forEach( set => {\n                removeCollectionSets[set] = 0\n            })\n\n            updateCollectionSets(removeCollectionSets)\n        }\n        else if (name === 'building') {\n            if (value === true && cardData && tabooData) {\n                const investigatorID = Object.keys(cardData)\n                .filter(key => {\n                    return  cardData[key].name === investigator\n                })[0]\n\n                if (!selectedDeckSize) {\n                    changeDeckSize(cardData[investigatorID].deck_requirements.size)    \n                }\n\n                if (!secondaryClass) {\n                    const classOptions = cardData[investigatorID].deck_options.filter(item => item.name === 'Secondary Class')\n\n                    if (classOptions.length > 0) {\n                        changeSecondaryClass(classOptions[0].faction_select[0])\n                    }\n                }\n\n                let tData = tabooData.filter(item => item.code === selectedTaboo ? true : false)\n\n                updateCardData(mergeTabooData(cardData, tData))\n            }\n            changeBuilding(value)\n        }\n    }\n\n    function doChangeDraftCount(index, value) {\n        let newCount = []\n        newCount = newCount.concat(draftCount)\n        newCount[index-1] = value\n        changeDraftCount(newCount)\n    }\n\n    function doChangeDraftCards(index, value) {\n        let newCards = []\n        newCards = newCards.concat(draftCards)\n        newCards[index-1] = value\n        changeDraftCards(newCards)\n    }\n\n    function doChangeDraftUseLimited(index, value) {\n        let newUseLimited = []\n        newUseLimited = newUseLimited.concat(draftUseLimited)\n        newUseLimited[index-1] = !draftUseLimited[index-1]\n        changeDraftUseLimited(newUseLimited)\n    }\n    \n    function resetApp() {\n        changeBuilding(false)\n//        changeInitialized(false)\n        changeNewPhase(true)\n        updateCardList([])\n        updateDraftPool([])\n        changePhase(1)\n        changeComplete(false)\n    }\n\n    const ready = cardData && tabooData && !fetchError\n\n    return (\n        <App\n        investigator={investigator}\n        secondaryClass={secondaryClass}\n        selectedDeckSize={selectedDeckSize}\n        selectedTaboo={selectedTaboo}\n        deckSize={deckSize}\n        myriadCount={myriadCount}\n        draftTab={draftTab}\n        draftType={draftType}\n        draftWeighting={draftWeighting}\n        draftXP={draftXP}\n        draftCount={draftCount}\n        draftCards={draftCards}\n        draftUseLimited={draftUseLimited}\n        draftProgress={draftTab === 'Build Deck' ? draftProgressBuild : draftProgressUpgrade}\n        ready={ready}\n        building={building}\n        fetchError={fetchError}\n        phase={phase}\n        cardList={cardList}\n        collectionSets={collectionSets}\n        draftPool={draftPool}\n        cardData={cardData}\n        tabooData={tabooData}\n        handleChange={handleChange}\n        draftCard={draftCard}\n        updateCardList={updateCardList}\n        updateDraftPool={updateDraftPool}\n        resetApp={resetApp}\n        expandCollection={expandCollection}\n        />\n    )\n}\n\nexport default AppContainer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppContainer from './AppContainer';\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppContainer />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}