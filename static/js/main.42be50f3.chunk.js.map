{"version":3,"sources":["components/InvestigatorSettings.js","components/SettingsType.js","components/SettingsChaos.js","components/SettingsDraft.js","components/SettingsPhase.js","components/SettingsPhasedDraft.js","components/SettingsBuild.js","components/SettingsUpgrade.js","components/Settings.js","components/CardList.js","components/DraftArea.js","components/DraftBuild.js","App.js","components/DraftData.js","components/DraftFilters.js","components/StandardChaos.js","components/SimpleDraft.js","AppContainer.js","index.js"],"names":["InvestigatorSettings","props","handleChange","event","onChangeSetting","target","name","value","skidsName","skidsOption","className","investigator","onChange","style","display","secondaryClass","deckSize","SettingsType","style1","style2","handleClick","attributes","nodeValue","draftTab","backgroundColor","borderLeft","borderBottom","borderRight","onClick","SettingsChaos","SettingsDraft","type","min","max","step","draftCount","SettingsPhase","padding","phase","maxCards","draftCards","SettingsPhasedDraft","limit2","limit3","limit4","warningText2","warningText3","warningStyle2","warningStyle3","warningStyle4","SettingsBuild","draftSettings","draftType","SettingsUpgrade","Settings","button","ready","CardList","cardList","assetCount","eventCount","skillCount","otherCount","hand","hand2","arcane","arcane2","accessory","body","ally","tarot","otherasset","permanent","skill","other","forEach","item","push","count","slot","assetHeader","handHeader","length","handContents","sort","a","b","map","index","countStr","key","hand2Header","hand2Contents","arcaneHeader","arcaneContents","arcane2Header","arcane2Contents","accessoryHeader","accessoryContents","bodyHeader","bodyContents","allyHeader","allyContents","tarotHeader","tarotContents","otherassetHeader","otherassetContents","permanentHeader","permanentContents","eventHeader","eventContents","skillHeader","skillContents","otherHeader","otherContents","marginBottom","DraftArea","draftPool","draftCard","updateCardList","updateDraftPool","newList","findIndex","src","includes","imagesrc","updatedList","concat","images","i","imageSrc","alt","phaseText","DraftBuild","cardCount","cardData","investigatorCardImage","investigatorCardImageBack","investigatorID","Object","keys","filter","backimagesrc","draftContent","App","contents","fetchError","building","DrawCard","legal","randomCard","randomCode","Math","floor","random","code","FilterCards","legalSets","deckOptions","deck_options","filteredDeck","list","options","limit","testDeckOption","filterDeckForLimited","countDeckLimited","option","card","level","faction","trait","f","faction_code","faction2_code","ixp","undefined","xp","cardTraits","traits","search","RegExp","type_code","bonded_to","subtype_code","restrictions","pack_code","optionLegal","not","limited","deck_limit","console","log","StandardChaos","filteredData","SimpleDraft","AppContainer","useState","changeInvestigator","changeSecondaryClass","selectedDeckSize","changeSelectedDeckSize","changeDeckSize","changeDraftTab","changeDraftType","changeDraftCount","changeDraftCards","changeBuilding","initialized","changeInitialized","fetching","changeFetching","updateCardData","updateFetchError","changePhase","doChangeDraftCount","newCount","doChangeDraftCards","newCards","useEffect","fetch","mode","then","res","json","catch","upgrade","pool","targetCards","parseInt","deck_requirements","size","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PA+DeA,MA7Df,SAA8BC,GAC1B,SAASC,EAAaC,GAClBF,EAAMG,gBAAgBD,EAAME,OAAOC,KAAMH,EAAME,OAAOE,OAG1D,IAAIC,EAAY,WAChBA,GAAwB,UACxB,IAAMC,EAAc,4BAAQF,MAAOC,GAAYA,GAE/C,OACI,yBAAKE,UAAU,YACX,oDACA,gDACA,4BAAQJ,KAAK,eAAeC,MAAON,EAAMU,aAAcC,SAAUV,GAC7D,4BAAQK,MAAM,gBAAd,gBACA,4BAAQA,MAAM,gBAAd,gBACCE,EACD,4BAAQF,MAAM,eAAd,eACA,4BAAQA,MAAM,eAAd,eACA,4BAAQA,MAAM,gBAAd,gBACA,4BAAQA,MAAM,cAAd,cACA,4BAAQA,MAAM,gBAAd,gBACA,4BAAQA,MAAM,cAAd,cACA,4BAAQA,MAAM,iBAAd,iBACA,4BAAQA,MAAM,iBAAd,iBACA,4BAAQA,MAAM,iBAAd,iBACA,4BAAQA,MAAM,mBAAd,mBACA,4BAAQA,MAAM,kBAAd,kBACA,4BAAQA,MAAM,gBAAd,gBACA,4BAAQA,MAAM,gBAAd,gBACA,4BAAQA,MAAM,gBAAd,gBACA,4BAAQA,MAAM,gBAAd,gBACA,4BAAQA,MAAM,iBAAd,iBACA,4BAAQA,MAAM,oBAAd,oBACA,4BAAQA,MAAM,iBAAd,iBACA,4BAAQA,MAAM,cAAd,cACA,4BAAQA,MAAM,iBAAd,iBACA,4BAAQA,MAAM,iBAAd,iBACA,4BAAQA,MAAM,iBAAd,iBACA,4BAAQA,MAAM,oBAAd,qBAEJ,wBAAIM,MAAO,CAACC,QAAS,UACrB,2BAAOD,MAAO,CAACC,QAAS,QAASJ,UAAU,iBAAiBH,MAAON,EAAMc,gBAAzE,oBACA,4BAAQF,MAAO,CAACC,QAAS,QAASJ,UAAU,iBAAiBJ,KAAK,iBAAiBC,MAAON,EAAMc,eAAgBH,SAAUV,GACtH,4BAAQK,MAAM,YAAd,YACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,YAAd,aAEJ,wBAAIM,MAAO,CAACC,QAAS,UACrB,2BAAOD,MAAO,CAACC,QAAS,QAASJ,UAAU,WAAWH,MAAON,EAAMe,UAAnE,cACA,4BAAQH,MAAO,CAACC,QAAS,QAASJ,UAAU,WAAWJ,KAAK,WAAWC,MAAON,EAAMe,SAAUJ,SAAUV,GACpG,4BAAQK,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,SCfDU,MAxCf,SAAsBhB,GAClB,IAAIiB,EAAS,GACTC,EAAS,GAsBb,SAASC,EAAYjB,GACjBF,EAAMG,gBAAgBD,EAAME,OAAOgB,WAAWf,KAAKgB,UAAWnB,EAAME,OAAOgB,WAAWd,MAAMe,WAGhG,MAxBuB,eAAnBrB,EAAMsB,UACNL,EAAS,CACLM,gBAAiB,WAErBL,EAAS,CACLK,gBAAiB,UACjBC,WAAY,kBACZC,aAAc,qBAGlBR,EAAS,CACLM,gBAAiB,UACjBG,YAAa,kBACbD,aAAc,mBAElBP,EAAS,CACLK,gBAAiB,YASrB,yBAAKd,UAAU,cACX,yBAAKA,UAAU,cAAcJ,KAAK,WAAWC,MAAM,aAAaM,MAAOK,EAAQU,QAASR,GAAxF,cAGA,yBAAKV,UAAU,cAAcJ,KAAK,WAAWC,MAAM,UAAUM,MAAOM,EAAQS,QAASR,GAArF,aCdGS,MAnBf,SAAuB5B,GACnB,OACI,yBAAKS,UAAU,wBCaRoB,MAff,SAAuB7B,GAMnB,OACI,yBAAKS,UAAU,sBACX,wDACA,2BAAOqB,KAAK,QAAQC,IAAI,IAAIC,IAAI,IAAIC,KAAK,IAAI3B,MAAON,EAAMkC,WAAYzB,UAAU,SAASJ,KAAK,cAAcM,SAPpH,SAAsBT,GAClBF,EAAMG,gBAAgBD,EAAME,OAAOC,KAAMH,EAAME,OAAOE,UAOlD,0BAAMG,UAAU,eAAeT,EAAMkC,cCKlCC,MAff,SAAuBnC,GACnB,OACI,yBAAKS,UAAU,cACX,wBAAIG,MAAO,CAACwB,QAAS,cAArB,SAA0CpC,EAAMqC,OAChD,wDACA,2BAAOP,KAAK,QAAQC,IAAI,IAAIC,IAAI,IAAI1B,MAAON,EAAMkC,WAAYzB,UAAU,SAASJ,KAAK,aAAaM,SAAUX,EAAMG,kBAClH,0BAAMM,UAAU,eAAeT,EAAMkC,YACrC,6BACA,iEACA,2BAAOJ,KAAK,QAAQC,IAAI,IAAIC,IAAKhC,EAAMsC,SAAUhC,MAAON,EAAMuC,WAAY9B,UAAU,SAASJ,KAAK,aAAaM,SAAUX,EAAMG,kBAC/H,0BAAMM,UAAU,eAAeT,EAAMuC,cC0DlCC,MAlEf,SAA6BxC,GACzB,IAAIyC,EAASzC,EAAMe,SAAWf,EAAMuC,WAAW,GAC3CG,EAASD,EAASzC,EAAMuC,WAAW,GACnCI,EAASD,EAAS1C,EAAMuC,WAAW,GAEnCK,EAAe,KACfC,EAAe,KACfC,EAAgB,GAChBC,EAAgB,GAChBC,EAAgB,GAuCpB,OArCIP,EAASzC,EAAMuC,WAAW,IACVK,EAAZH,EAAS,EAAkB,QAAUA,EACrB,KAEpBK,EAAgB,CAACjC,QAAS,UAE1BiC,EAAgB,CAACjC,QAAS,QAG1B6B,EAAS1C,EAAMuC,WAAW,IACVM,EAAZH,EAAS,EAAkB,QAAUA,EACrB,KAEpBK,EAAgB,CAAClC,QAAS,SACtB6B,EAAS,IAAGA,EAAS,IAEzBK,EAAgB,CAAClC,QAAS,QAI1BmC,EADAL,EAAS,EACO,CAAC9B,QAAS,SAEV,CAACA,QAAS,QAgB1B,yBAAKJ,UAAU,sBACX,kBAAC,EAAD,CAAe4B,MAAM,IAAIH,WAAYlC,EAAMkC,WAAW,GAAIK,WAAYvC,EAAMuC,WAAW,GAAID,SAAUtC,EAAMe,SAAUZ,gBAd7H,SAAuBD,GACnBF,EAAMG,gBAAgBD,EAAME,OAAOC,KAAO,IAAKH,EAAME,OAAOE,UAcxD,kBAAC,EAAD,CAAe+B,MAAM,IAAIH,WAAYlC,EAAMkC,WAAW,GAAIK,WAAYvC,EAAMuC,WAAW,GAAID,SAAUtC,EAAMe,SAAUZ,gBAX7H,SAAuBD,GACnBF,EAAMG,gBAAgBD,EAAME,OAAOC,KAAO,IAAKH,EAAME,OAAOE,UAWxD,kBAAC,EAAD,CAAe+B,MAAM,IAAIH,WAAYlC,EAAMkC,WAAW,GAAIK,WAAYvC,EAAMuC,WAAW,GAAID,SAAUtC,EAAMe,SAAUZ,gBAR7H,SAAuBD,GACnBF,EAAMG,gBAAgBD,EAAME,OAAOC,KAAO,IAAKH,EAAME,OAAOE,UAQxD,yBAAKG,UAAU,UAAUG,MAAOkC,GAC5B,uCADJ,IACqBF,EADrB,oCAGA,yBAAKnC,UAAU,UAAUG,MAAOmC,GAC5B,uCADJ,IACqBF,EADrB,oCAGA,yBAAKpC,UAAU,UAAUG,MAAOoC,GAC5B,uCADJ,cAC+BL,EAD/B,qCCvBGM,MAlCf,SAAuBjD,GAKnB,IAAIkD,EAgBJ,MAdwB,UAApBlD,EAAMmD,UAAuBD,EAAgB,kBAAC,EAAD,CACzC/C,gBAAiBH,EAAMG,kBAEF,UAApBH,EAAMmD,UAAuBD,EAAgB,kBAAC,EAAD,CAC9ChB,WAAYlC,EAAMkC,WAAW,GAC7B/B,gBAAiBH,EAAMG,kBAEF,eAApBH,EAAMmD,YAA4BD,EAAgB,kBAAC,EAAD,CACnDhB,WAAYlC,EAAMkC,WAClBK,WAAYvC,EAAMuC,WAClBxB,SAAUf,EAAMe,SAChBZ,gBAAiBH,EAAMG,mBAI3B,6BACI,wCACA,4BAAQE,KAAK,YAAYC,MAAON,EAAMmD,UAAWxC,SAvBzD,SAAsBT,GAClBF,EAAMG,gBAAgBD,EAAME,OAAOC,KAAMH,EAAME,OAAOE,SAuB9C,4BAAQA,MAAM,SAAd,kBACA,4BAAQA,MAAM,SAAd,gBACA,4BAAQA,MAAM,cAAd,iBAEH4C,IC1BEE,MAPf,SAAyBpD,GACrB,OACI,+BCkCOqD,MAhCf,SAAkBrD,GAKd,IAAMkD,EAAmC,eAAnBlD,EAAMsB,SACxB,kBAAC,EAAD,CACI6B,UAAWnD,EAAMmD,UACjBjB,WAAYlC,EAAMkC,WAClBK,WAAYvC,EAAMuC,WAClBxB,SAAUf,EAAMe,SAChBZ,gBAAiBH,EAAMG,kBAE3B,kBAAC,EAAD,CACIA,gBAAiBH,EAAMG,kBAGzBmD,EAAStD,EAAMuD,MACrB,4BAAQ9C,UAAU,eAAekB,QAjBjC,SAAqBzB,GACjBF,EAAMG,gBAAgB,YAAY,KAgBtC,SACA,4BAAQM,UAAU,kBAAlB,cAEA,OACI,yBAAKA,UAAU,YACX,kBAAC,EAAD,CAAca,SAAUtB,EAAMsB,SAAUnB,gBAAiBH,EAAMG,kBAC/D,6CACA,4BAAKH,EAAMsB,UACV4B,EACAI,IC2IEE,MA1Kf,SAAkBxD,GAAQ,IACdyD,EAAazD,EAAbyD,SAEJC,EAAa,EACbC,EAAa,EACbC,EAAa,EACbC,EAAa,EACXC,EAAO,GACPC,EAAQ,GACRC,EAAS,GACTC,EAAU,GACVC,EAAY,GACZC,EAAO,GACPC,EAAO,GACPC,EAAQ,GACRC,EAAa,GACbC,EAAY,GACZrE,EAAQ,GACRsE,EAAQ,GACRC,EAAQ,GAEdhB,EAASiB,SAAQ,SAAAC,GACK,UAAdA,EAAK7C,MACL5B,EAAM0E,KAAKD,GACXhB,GAAcgB,EAAKE,OAEA,UAAdF,EAAK7C,MACV0C,EAAMI,KAAKD,GACXf,GAAce,EAAKE,OAEA,UAAdF,EAAK7C,MACN6C,EAAKJ,UAAWA,EAAUK,KAAKD,GACZ,SAAdA,EAAKG,KAAiBhB,EAAKc,KAAKD,GAClB,YAAdA,EAAKG,KAAoBf,EAAMa,KAAKD,GACtB,WAAdA,EAAKG,KAAmBd,EAAOY,KAAKD,GACtB,cAAdA,EAAKG,KAAsBb,EAAQW,KAAKD,GAC1B,cAAdA,EAAKG,KAAsBZ,EAAUU,KAAKD,GAC5B,SAAdA,EAAKG,KAAiBX,EAAKS,KAAKD,GAClB,SAAdA,EAAKG,KAAiBV,EAAKQ,KAAKD,GAClB,UAAdA,EAAKG,KAAkBT,EAAMO,KAAKD,GACtCL,EAAWM,KAAKD,GACrBjB,GAAciB,EAAKE,QAGnBJ,EAAMG,KAAKD,GACXd,GAAcc,EAAKE,UAI3B,IAAME,EAAcrB,EAAa,EAAI,uCAAaA,EAAb,KAAiC,KAEhEsB,EAAalB,EAAKmB,OAAS,EAAI,uBAAGxE,UAAU,eAAb,QAAsC,KACrEyE,EAAepB,EAAKqB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE/E,KAAOgF,EAAEhF,KAAQ,GAAK,KAAGiF,KAAI,SAACX,EAAMY,GAC5E,IAAMC,EAAWb,EAAKE,MAAQ,EAAI,KAAOF,EAAKE,MAAQ,KACtD,OAAO,uBAAGY,IAAKF,GAAQZ,EAAKtE,KAAMmF,MAGhCE,EAAc3B,EAAMkB,OAAS,EAAI,uBAAGxE,UAAU,eAAb,WAAyC,KAC1EkF,EAAgB5B,EAAMoB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE/E,KAAOgF,EAAEhF,KAAQ,GAAK,KAAGiF,KAAI,SAACX,EAAMY,GAC9E,IAAMC,EAAWb,EAAKE,MAAQ,EAAI,KAAOF,EAAKE,MAAQ,KACtD,OAAO,uBAAGY,IAAKF,GAAQZ,EAAKtE,KAAMmF,MAGhCI,EAAe5B,EAAOiB,OAAS,EAAI,uBAAGxE,UAAU,eAAb,UAAwC,KAC3EoF,EAAiB7B,EAAOmB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE/E,KAAOgF,EAAEhF,KAAQ,GAAK,KAAGiF,KAAI,SAACX,EAAMY,GAChF,IAAMC,EAAWb,EAAKE,MAAQ,EAAI,KAAOF,EAAKE,MAAQ,KACtD,OAAO,uBAAGY,IAAKF,GAAQZ,EAAKtE,KAAMmF,MAGhCM,EAAgB7B,EAAQgB,OAAS,EAAI,uBAAGxE,UAAU,eAAb,aAA2C,KAChFsF,EAAkB9B,EAAQkB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE/E,KAAOgF,EAAEhF,KAAQ,GAAK,KAAGiF,KAAI,SAACX,EAAMY,GAClF,IAAMC,EAAWb,EAAKE,MAAQ,EAAI,KAAOF,EAAKE,MAAQ,KACtD,OAAO,uBAAGY,IAAKF,GAAQZ,EAAKtE,KAAMmF,MAGhCQ,EAAkB9B,EAAUe,OAAS,EAAI,uBAAGxE,UAAU,eAAb,aAA2C,KACpFwF,EAAoB/B,EAAUiB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE/E,KAAOgF,EAAEhF,KAAQ,GAAK,KAAGiF,KAAI,SAACX,EAAMY,GACtF,IAAMC,EAAWb,EAAKE,MAAQ,EAAI,KAAOF,EAAKE,MAAQ,KACtD,OAAO,uBAAGY,IAAKF,GAAQZ,EAAKtE,KAAMmF,MAGhCU,EAAa/B,EAAKc,OAAS,EAAI,uBAAGxE,UAAU,eAAb,QAAsC,KACrE0F,EAAehC,EAAKgB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE/E,KAAOgF,EAAEhF,KAAQ,GAAK,KAAGiF,KAAI,SAACX,EAAMY,GAC5E,IAAMC,EAAWb,EAAKE,MAAQ,EAAI,KAAOF,EAAKE,MAAQ,KACtD,OAAO,uBAAGY,IAAKF,GAAQZ,EAAKtE,KAAMmF,MAGhCY,EAAahC,EAAKa,OAAS,EAAI,uBAAGxE,UAAU,eAAb,QAAsC,KACrE4F,EAAejC,EAAKe,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE/E,KAAOgF,EAAEhF,KAAQ,GAAK,KAAGiF,KAAI,SAACX,EAAMY,GAC5E,IAAMC,EAAWb,EAAKE,MAAQ,EAAI,KAAOF,EAAKE,MAAQ,KACtD,OAAO,uBAAGY,IAAKF,GAAQZ,EAAKtE,KAAMmF,MAGhCc,EAAcjC,EAAMY,OAAS,EAAI,uBAAGxE,UAAU,eAAb,SAAuC,KACxE8F,EAAgBlC,EAAMc,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE/E,KAAOgF,EAAEhF,KAAQ,GAAK,KAAGiF,KAAI,SAACX,EAAMY,GAC9E,IAAMC,EAAWb,EAAKE,MAAQ,EAAI,KAAOF,EAAKE,MAAQ,KACtD,OAAO,uBAAGY,IAAKF,GAAQZ,EAAKtE,KAAMmF,MAGhCgB,EAAmBlC,EAAWW,OAAS,EAAI,uBAAGxE,UAAU,eAAb,SAAuC,KAClFgG,EAAqBnC,EAAWa,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE/E,KAAOgF,EAAEhF,KAAQ,GAAK,KAAGiF,KAAI,SAACX,EAAMY,GACxF,IAAMC,EAAWb,EAAKE,MAAQ,EAAI,KAAOF,EAAKE,MAAQ,KACtD,OAAO,uBAAGY,IAAKF,GAAQZ,EAAKtE,KAAMmF,MAGhCkB,EAAkBnC,EAAUU,OAAS,EAAI,uBAAGxE,UAAU,eAAb,aAA2C,KACpFkG,EAAoBpC,EAAUY,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE/E,KAAOgF,EAAEhF,KAAQ,GAAK,KAAGiF,KAAI,SAACX,EAAMY,GACtF,IAAMC,EAAWb,EAAKE,MAAQ,EAAI,KAAOF,EAAKE,MAAQ,KACtD,OAAO,uBAAGY,IAAKF,GAAQZ,EAAKtE,KAAMmF,MAIhCoB,EAAcjD,EAAa,EAAI,uCAAaA,EAAb,KAAiC,KAChEkD,EAAgB3G,EAAMiF,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE/E,KAAOgF,EAAEhF,KAAQ,GAAK,KAAGiF,KAAI,SAACX,EAAMY,GAC9E,IAAMC,EAAWb,EAAKE,MAAQ,EAAI,KAAOF,EAAKE,MAAQ,KACtD,OAAO,uBAAGY,IAAKF,GAAQZ,EAAKtE,KAAMmF,MAGhCsB,EAAclD,EAAa,EAAI,uCAAaA,EAAb,KAAiC,KAChEmD,EAAgBvC,EAAMW,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE/E,KAAOgF,EAAEhF,KAAQ,GAAK,KAAGiF,KAAI,SAACX,EAAMY,GAC9E,IAAMC,EAAWb,EAAKE,MAAQ,EAAI,KAAOF,EAAKE,MAAQ,KACtD,OAAO,uBAAGY,IAAKF,GAAQZ,EAAKtE,KAAMmF,MAGhCwB,EAAcnD,EAAa,EAAI,sCAAYA,EAAZ,KAAgC,KAC/DoD,EAAgBxC,EAAMU,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE/E,KAAOgF,EAAEhF,KAAQ,GAAK,KAAGiF,KAAI,SAACX,EAAMY,GAC9E,IAAMC,EAAWb,EAAKE,MAAQ,EAAI,KAAOF,EAAKE,MAAQ,KACtD,OAAO,uBAAGY,IAAKF,GAAQZ,EAAKtE,KAAMmF,MAGtC,OACI,yBAAK/E,UAAU,YACX,wBAAIG,MAAO,CAACsG,aAAc,UAA1B,aACA,yBAAKzG,UAAU,iBACX,yBAAKA,UAAU,QACVsE,EACAC,EACAE,EACAQ,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEL,yBAAKlG,UAAU,QACVmG,EACAC,EACAC,EACAC,EACAC,EACAC,MC9HNE,MArCf,SAAmBnH,GAAQ,IACfkC,EAAkGlC,EAAlGkC,WAAYkF,EAAsFpH,EAAtFoH,UAAWC,EAA2ErH,EAA3EqH,UAAWlE,EAAgEnD,EAAhEmD,UAAWd,EAAqDrC,EAArDqC,MAAOoB,EAA8CzD,EAA9CyD,SAAU6D,EAAoCtH,EAApCsH,eAAgBC,EAAoBvH,EAApBuH,gBAElFC,EAAU,GAGd,SAASrG,EAAYjB,GACjB,IAAMqF,EAAQ6B,EAAUK,WAAU,SAAA9C,GAC9B,OAAOzE,EAAME,OAAOsH,IAAIC,SAAShD,EAAKiD,aAGpCC,EAAcR,EAAUD,EAAU7B,GAAQiC,GAEhDF,EAAeO,GACfN,EAAgB,IAVpBC,EAAUA,EAAQM,OAAOrE,GAezB,IAFA,IAAIsE,EAAS,GAEJC,EAAI,EAAGA,EAAI9F,EAAY8F,IAAK,CACjC,IAAMC,EAAW,2BAA6Bb,EAAUY,GAAGJ,SAC3DG,EAAOnD,KAAK,yBAAKnE,UAAU,aAAagF,IAAKuC,GAAG,yBAAKvH,UAAU,cAAciH,IAAKO,EAAUC,IAAKd,EAAUY,GAAG3H,KAAMsB,QAASR,MAGjI,IAAMgH,EAA0B,eAAdhF,EAA6B,YAAcd,EAAQ,KAErE,OACI,yBAAK5B,UAAU,YACX,oCAAU0H,GACV,yBAAK1H,UAAU,mBACVsH,GAEL,0DCqBGK,MAlDf,SAAoBpI,GAAQ,IAChBU,EAA+IV,EAA/IU,aAAcK,EAAiIf,EAAjIe,SAAUmB,EAAuHlC,EAAvHkC,WAAYmG,EAA2GrI,EAA3GqI,UAAWlF,EAAgGnD,EAAhGmD,UAAWd,EAAqFrC,EAArFqC,MAAOoB,EAA8EzD,EAA9EyD,SAAU2D,EAAoEpH,EAApEoH,UAAWkB,EAAyDtI,EAAzDsI,SAAUjB,EAA+CrH,EAA/CqH,UAAWC,EAAoCtH,EAApCsH,eAAgBC,EAAoBvH,EAApBuH,gBAE/HgB,EAAwB,KACxBC,EAA4B,KAEhC,GAAIF,EAAU,CACV,IAAMG,EAAiBC,OAAOC,KAAKL,GAClCM,QAAO,SAAAnD,GACJ,OAAQ6C,EAAS7C,GAAKpF,OAASK,KAChC,GAEGkH,EAAW,2BAA6BU,EAASG,GAAgBb,SACjEiB,EAAe,2BAA6BP,EAASG,GAAgBI,aAC3EN,EAAwB,yBAAK9H,UAAU,qBAAqBiH,IAAKE,EAAUM,IAAKlI,EAAMU,eACtF8H,EAA4B,yBAAK/H,UAAU,qBAAqBiH,IAAKmB,EAAcX,IAAKlI,EAAMU,aAAe,YAGjH,IAAIoI,EAAe,KAenB,OAbI1B,EAAUnC,OAAS,IACnB6D,EAAe,kBAAC,EAAD,CACX5G,WAAYA,EACZmF,UAAWA,EACXhF,MAAOA,EACPc,UAAWA,EACXiE,UAAWA,EACX3D,SAAUA,EACV6D,eAAgBA,EAChBC,gBAAiBA,KAKrB,6BACI,yBAAK9G,UAAU,YACX,4BAAKC,GACL,6BACC6H,EACAC,EACD,2BAAG,sCAAeH,EAAlB,IAA8BtH,IAEjC+H,EACD,kBAAC,EAAD,CACIrF,SAAUA,MCmBXsF,MA3Df,SAAa/I,GACT,IAAIgJ,EAAW,KAgDf,OA7CIA,EADAhJ,EAAMiJ,WAEF,6CAICjJ,EAAMkJ,SAEP,kBAAC,EAAD,CACI/F,UAAWnD,EAAMmD,UACjBzC,aAAcV,EAAMU,aACpBI,eAAgBd,EAAMc,eACtBC,SAAUf,EAAMe,SAChBmB,WAAYlC,EAAMkC,WAAWlC,EAAMqC,MAAM,GACzCE,WAAYvC,EAAMuC,WAAWvC,EAAMqC,MAAM,GACzCgG,UAAWrI,EAAMqI,UACjBhG,MAAOrC,EAAMqC,MACboB,SAAUzD,EAAMyD,SAChB6E,SAAUtI,EAAMsI,SAChBlB,UAAWpH,EAAMoH,UACjBC,UAAWrH,EAAMqH,UACjBC,eAAgBtH,EAAMsH,eACtBC,gBAAiBvH,EAAMuH,kBAK/B,6BACI,kBAAC,EAAD,CACI7G,aAAcV,EAAMU,aACpBI,eAAgBd,EAAMc,eACtBC,SAAUf,EAAMe,SAChBZ,gBAAiBH,EAAMC,eAE3B,kBAAC,EAAD,CACIqB,SAAUtB,EAAMsB,SAChB6B,UAAWnD,EAAMmD,UACjBjB,WAAYlC,EAAMkC,WAClBK,WAAYvC,EAAMuC,WAClBxB,SAAUf,EAAMe,SAChBwC,MAAOvD,EAAMuD,MACbpD,gBAAiBH,EAAMC,gBAM/B,yBAAKQ,UAAU,OACX,4BAAQA,UAAU,cAAlB,oBAGCuI,IC/CEG,MAhBf,SAAkBb,EAAUlB,GAIxB,IAHA,IAAIgC,GAAQ,EACRC,EAAa,KAFkB,aAO/B,IAAMC,GAFND,EAAaf,EAASiB,KAAKC,MAAMD,KAAKE,SAAWnB,EAASrD,UAE5ByE,MACPtC,GAAaA,EAAUnC,OAAS,EAAKmC,EAAUK,WAAU,SAAA9C,GAAI,OAAIA,EAAK+E,OAASJ,MAAe,GAEjG,IAAGF,GAAQ,KAN3BA,GAAQ,IAShB,OAAOC,GC8MIM,MA1Jf,SAAqB3J,GAAQ,IACjBU,EAAqCV,EAArCU,aAAc4H,EAAuBtI,EAAvBsI,SAAU7E,EAAazD,EAAbyD,SAE1BmG,EAAY,CAAE,KAAQ,EACvB,IAAO,EAAG,IAAO,EAAG,KAAQ,EAAG,KAAQ,EAAG,IAAO,EAAG,IAAO,EAAG,MAAS,EACvE,IAAO,EAAG,KAAQ,EAAG,IAAO,EAAG,KAAQ,EAAG,IAAO,EAAG,IAAO,EAAG,IAAO,EACrE,IAAO,EAAG,IAAO,EAAG,IAAO,EAAG,KAAQ,EAAG,KAAQ,EAAG,KAAQ,EAAG,IAAO,EACtE,IAAO,EAAG,IAAO,EAAG,IAAO,EAAG,IAAO,EAAG,IAAO,EAAG,IAAO,EAAG,IAAO,EACnE,IAAO,EAAG,IAAO,EAAG,IAAO,EAAG,IAAO,EAAG,IAAO,EAAG,IAAO,EAAG,IAAO,EACnE,OAAU,EAAG,MAAS,EAAG,MAAS,GAEjCnB,EAAiBC,OAAOC,KAAKL,GAClCM,QAAO,SAAAnD,GACJ,OAAO6C,EAAS7C,GAAKpF,OAASK,KAC/B,GAEGmJ,EAAcvB,EAASG,GAAgBqB,aAEvCC,EA0DN,SAA8BC,EAAMC,GAChC,IAAKD,EAAM,MAAO,GAElB,IAAID,EAAe,GAgBnB,OAdAC,EAAKtF,SAAQ,SAAAC,GAGT,IAFA,IAAIyE,GAAQ,EAEHpB,EAAI,EAAGA,EAAIiC,EAAQhF,OAAQ+C,IAAK,CACrC,IAAIiC,EAAQjC,GAAGkC,MAEKC,EAAexF,EAAMsF,EAAQjC,MAEhCoB,GAAQ,GAGxBA,GAAOW,EAAanF,KAAKD,MAG3BoF,EA7EUK,CAAqB3G,EAAUoG,GAgFpD,SAASQ,EAAiBL,EAAMM,GAC5B,IAAIzF,EAAQ,EAQZ,OANImF,GACAA,EAAKtF,SAAQ,SAAAC,GACLwF,EAAexF,EAAM2F,KAASzF,GAASF,EAAKE,UAIjDA,EAGX,SAASsF,EAAeI,EAAMD,GAC1B,IAAIE,GAAQ,EACRC,GAAU,EACVC,GAAQ,EAEZ,GAAIJ,EAAOG,QAAS,CAChBA,GAAU,EAEV,IAAK,IAAIE,EAAI,EAAGA,EAAIL,EAAOG,QAAQxF,OAAQ0F,IACnCJ,EAAKK,eAAiBN,EAAOG,QAAQE,KACrCF,GAAU,GAEVF,EAAKM,gBAAkBP,EAAOG,QAAQE,KACtCF,GAAU,GAKtB,GAAIH,EAAOE,MAAO,CACdA,GAAQ,EAER,IAAMzI,EAAMuI,EAAOE,MAAMzI,IACnBC,EAAMsI,EAAOE,MAAMxI,IAEnB8I,OAAkBC,IAAZR,EAAKS,GAAmB,EAAIT,EAAKS,GAEzCF,GAAO/I,GAAO+I,GAAO9I,IAAKwI,GAAQ,GAG1C,GAAIF,EAAOI,MAAO,CACdA,GAAQ,EAER,IAAMO,EAAaV,EAAKW,OAEpBD,GAAcA,EAAWE,OAAO,IAAIC,OAAOd,EAAOI,MAAO,OAAS,IAClEA,GAAQ,GAGhB,OAAOD,GAAWD,GAASE,EAG/B,OAhIqBpC,EAASM,QAAO,SAAA2B,GACjC,GAAuB,iBAAnBA,EAAKc,UAA8B,OAAO,EAC9C,GAAuB,UAAnBd,EAAKc,UAAuB,OAAO,EACvC,GAAuB,aAAnBd,EAAKc,UAA0B,OAAO,EAC1C,GAAuB,UAAnBd,EAAKc,UAAuB,OAAO,EACvC,GAAuB,cAAnBd,EAAKc,UAA2B,OAAO,EAC3C,GAAId,EAAKe,UAAW,OAAO,EAE3B,GAAIf,EAAKgB,aAAc,OAAO,EAC9B,GAAIhB,EAAKS,IAAMT,EAAKS,GAAK,EAAG,OAAO,EACnC,GAAIT,EAAKiB,cAAgBjB,EAAKiB,aAAa9K,aAAc,OAAO,EAChE,IAAKkJ,EAAUW,EAAKkB,WAAY,OAAO,EAIvC,IADA,IAAIrC,GAAQ,EACHpB,EAAI,EAAGA,EAAI6B,EAAY5E,OAAQ+C,IAAK,CACzC,IAAI0D,GAAc,EAElB,GAAIvB,EAAeI,EAAMV,EAAY7B,IAGjC,GAFA0D,GAAc,EAEV7B,EAAY7B,GAAG2D,IACfD,GAAc,OAEb,GAAI7B,EAAY7B,GAAGkC,MAAO,CACZG,EAAiBN,EAAcF,EAAY7B,KAE5C6B,EAAY7B,GAAGkC,QAAOwB,GAAc,GAItDA,IAAatC,GAAQ,GAG7B,IAAKA,EAAO,OAAO,EAGnB,IAAIwC,GAAU,EAWd,OATAnI,EAASiB,SAAQ,SAAAC,GACTA,EAAKtE,OAASkK,EAAKlK,MACfsE,EAAKE,OAAS0F,EAAKsB,aACnBC,QAAQC,IAAIxB,EAAKlK,KAAO,qBACxBuL,GAAU,OAKlBA,MCpHGI,MAjBf,SAAuBhM,GAAQ,IACnBuC,EAAoCvC,EAApCuC,WAAY8E,EAAwBrH,EAAxBqH,UAAW5D,EAAazD,EAAbyD,SAC3B+D,EAAU,GAEdA,EAAUA,EAAQM,OAAOrE,GAKzB,IAFA,IAAMwI,EAAetC,EAAY3J,GAExBgI,EAAI,EAAGA,EAAIzF,EAAYyF,IAAK,CAEjCR,EAAUH,EADG8B,EAAS8C,GACIzE,GAG9B,OAAOA,GCII0E,MAlBf,SAAqBlM,GACjB8L,QAAQC,IAAI,eAQZ,IATwB,IAEhB7J,EAAelC,EAAfkC,WAGF+J,EAAetC,EAAY3J,GAE7BoH,EAAY,GAEPY,EAAI,EAAGA,EAAI9F,EAAY8F,IAAK,CACjC,IAAMuC,EAAOpB,EAAS8C,EAAc7E,GAEpCA,EAAUxC,KAAK2F,GAGnB,OAAOnD,GC4OI+E,MAxPf,WAAyB,IAAD,EACuBC,mBAAS,gBADhC,mBACb1L,EADa,KACC2L,EADD,OAE2BD,mBAAS,YAFpC,mBAEbtL,EAFa,KAEGwL,EAFH,OAG+BF,mBAAS,MAHxC,mBAGbG,EAHa,KAGKC,EAHL,OAIeJ,mBAAS,MAJxB,mBAIbrL,EAJa,KAIH0L,EAJG,OAKeL,mBAAS,cALxB,mBAKb9K,EALa,KAKHoL,EALG,OAMiBN,mBAAS,SAN1B,mBAMbjJ,EANa,KAMFwJ,EANE,OAOmBP,mBAAS,CAAC,EAAG,EAAG,IAPnC,mBAOblK,EAPa,KAOD0K,EAPC,OAQmBR,mBAAS,CAAC,GAAI,GAAI,KARrC,mBAQb7J,EARa,KAQDsK,EARC,OASeT,oBAAS,GATxB,mBASblD,EATa,KASH4D,EATG,OAUqBV,oBAAS,GAV9B,mBAUbW,EAVa,KAUAC,EAVA,OAYeZ,oBAAS,GAZxB,mBAYba,EAZa,KAYHC,EAZG,OAaed,mBAAS,MAbxB,mBAab9D,EAba,KAaH6E,EAbG,QAcmBf,oBAAS,GAd5B,qBAcbnD,GAda,MAcDmE,GAdC,SAeehB,mBAAS,IAfxB,qBAeb3I,GAfa,MAeH6D,GAfG,SAgBiB8E,mBAAS,IAhB1B,qBAgBbhF,GAhBa,MAgBFG,GAhBE,SAiBS6E,mBAAS,GAjBlB,qBAiBb/J,GAjBa,MAiBNgL,GAjBM,MAmBhBhF,GAAY,EAEhB,GAAI5E,GACA,IAAK,IAAIkB,MAAQlB,GAERA,GAASkB,IAAMJ,YAAW8D,IAAa5E,GAASkB,IAAME,OA8JnE,SAASyI,GAAmB/H,EAAOjF,GAC/B,IAAIiN,EAAW,IACfA,EAAWA,EAASzF,OAAO5F,IAClBqD,EAAM,GAAKjF,EACpBsM,EAAiBW,GAGrB,SAASC,GAAmBjI,EAAOjF,GAC/B,IAAImN,EAAW,IACfA,EAAWA,EAAS3F,OAAOvF,IAClBgD,EAAM,GAAKjF,EACpBuM,EAAiBY,GAGrB,SAASpG,GAAUkD,EAAMP,GACjBA,GACsBA,EAAK/E,OAAS,EAAI+E,EAAKvC,WAAU,SAAA9C,GAAI,OAAIA,EAAKc,MAAQ8E,EAAKb,SAAS,IAErE,EACjBM,EAAK1E,KAAI,SAAAX,GACL,OAAIA,EAAKtE,OAASkK,EAAKlK,MACnBsE,EAAKE,MAAQF,EAAKE,MAAQ,EACnBF,GAGJA,KAIXqF,EAAKpF,KAAK,CAAEvE,KAAMkK,EAAKlK,KAAMoF,IAAK8E,EAAKb,KAAM5H,KAAMyI,EAAKc,UAAWvG,KAAMyF,EAAKzF,KAAM8F,aAAcL,EAAKK,aAAcC,cAAeN,EAAKM,cAAeG,GAAIT,EAAKS,GAAIzG,UAAWgG,EAAKhG,UAAWM,MAAO,IAI3MmF,EAAO,CAAC,CAAE3J,KAAMkK,EAAKlK,KAAMoF,IAAK8E,EAAKb,KAAM5H,KAAMyI,EAAKc,UAAWvG,KAAMyF,EAAKzF,KAAM8F,aAAcL,EAAKK,aAAcC,cAAeN,EAAKM,cAAeG,GAAIT,EAAKS,GAAIzG,UAAWgG,EAAKhG,UAAWM,MAAO,IAGzM,OAAOmF,EA9LX0D,qBAAU,kBAGNR,GAAe,QAEfS,MAAM,wEAAyE,CAAEC,KAAM,YACtFC,MAAK,SAAAC,GACF,OAAOA,EAAIC,UAEdF,MAAK,SAAAC,GACFX,EAAeW,GACfZ,GAAe,MAElBc,OAAM,kBAAMZ,IAAiB,QAbL,IAgB7BM,qBAAU,WACN,GAAIxE,IAAa6D,EAEb,GADAC,GAAkB,GACA,UAAd7J,EAAuB,CACvB,IAAM6G,EAAOgC,EAAc,CACvBtL,aAAcA,EACd6B,WAAYxB,EACZkN,SAAS,EACTxK,SAAUA,GACV6E,SAAUA,EACVjB,UAAWA,KAGfC,GAAe0C,QAGf,GAAmB,IAAf9H,EAAkB,CAClB,IAAM8H,EAAOgC,EAAc,CACvBtL,aAAcA,EACd6B,WAAYA,EAAWF,GAAM,GAC7B4L,SAAS,EACTxK,SAAUA,GACV6E,SAAUA,EACVjB,UAAWA,KAGfC,GAAe0C,OAEd,CACD,IAAMkE,EAAOhC,EAAY,CACrBxL,aAAcA,EACduN,SAAS,EACT/L,WAAYA,EAAWG,GAAM,GAC7BoB,SAAUA,GACV6E,SAAUA,EACVjB,UAAWA,KAGfE,GAAgB2G,MAI7B,CAAChF,EAAUxI,EAAc6B,EAAYkB,GAAU6E,EAAUiE,EAAkBxL,EAAUmB,EAAYiB,EAAWd,GAAO0K,IAEtHW,qBAAU,WACN,GAAIxE,GAAY9B,GAAUnC,OAAS,EAC/B,GAAkB,UAAd9B,GACA,GAAIkF,GAAYtH,EAAU,CACtB,IAAMmN,EAAOhC,EAAY,CACrBxL,aAAcA,EACduN,SAAS,EACT/L,WAAYA,EAAWG,GAAM,GAC7BoB,SAAUA,GACV6E,SAAUA,EACVjB,UAAWA,KAGfE,GAAgB2G,SAGnB,GAAkB,eAAd/K,EAA4B,CAGjC,IAFA,IAAIgL,EAAc,EAETnG,EAAI,EAAGA,EAAI3F,GAAO2F,IAAKmG,GAAeC,SAAS7L,EAAWyF,GAAI,IAEvE,GAAIK,GAAY8F,EAAa,CACzB,IAAMD,EAAOhC,EAAY,CACrBxL,aAAcA,EACduN,SAAS,EACT/L,WAAYA,EAAWG,GAAM,GAC7BoB,SAAUA,GACV6E,SAAUA,EACVjB,UAAWA,KAGfE,GAAgB2G,QAGhB,GAAI7L,GAAQ,EAAG,CACXgL,GAAYhL,GAAQ,GAEpB,IAAM6L,EAAOhC,EAAY,CACrBxL,aAAcA,EACduN,SAAS,EACT/L,WAAYA,EAAWG,IACvBoB,SAAUA,GACV6E,SAAUA,EACVjB,UAAWA,KAGfE,GAAgB2G,QAGhB,GAAI7F,GAAYtH,EAAU,CACtB,IAAMiJ,EAAOgC,EAAc,CACvBtL,aAAcA,EACd6B,WAAYxB,EAAWsH,GACvB4F,SAAS,EACTxK,SAAUA,GACV6E,SAAUA,EACVjB,UAAWA,KAGfC,GAAe0C,OAMpC,CAACd,EAAU9B,GAAWiB,GAAWC,EAAU7E,GAAU8I,EAAkBxL,EAAUwB,EAAYL,EAAYiB,EAAWzC,EAAc2B,KAoErI,IAAMkB,GAAQ+E,IAAa2E,IAAahE,GAExC,OACI,kBAAC,EAAD,CACAvI,aAAcA,EACdI,eAAgBA,EAChBC,SAAUA,EACVO,SAAUA,EACV6B,UAAWA,EACXjB,WAAYA,EACZK,WAAYA,EACZ8F,UAAWA,GACX9E,MAAOA,GACP2F,SAAUA,EACVD,WAAYA,GACZ5G,MAAOA,GACPoB,SAAUA,GACV2D,UAAWA,GACXkB,SAAUA,EACVrI,aArFJ,SAAsBI,EAAMC,GACxB,GAAa,iBAATD,EAAyB,CACzBgM,EAAmB/L,GAEnB,IAAMmI,EAAiBC,OAAOC,KAAKL,GAClCM,QAAO,SAAAnD,GACJ,OAAQ6C,EAAS7C,GAAKpF,OAASC,KAChC,GAEHmM,EAAenE,EAASG,GAAgB4F,kBAAkBC,UAE5C,mBAATjO,EAA2BiM,EAAqBhM,GACvC,aAATD,GACLmM,EAAuBlM,GACvBmM,EAAenM,IAED,aAATD,EAAqBqM,EAAepM,GAC3B,cAATD,EAAsBsM,EAAgBrM,GAC7B,gBAATD,EAAwBiN,GAAmB,EAAGhN,GACrC,gBAATD,EAAwBiN,GAAmB,EAAGhN,GACrC,gBAATD,EAAwBiN,GAAmB,EAAGhN,GACrC,gBAATD,EAAwBmN,GAAmB,EAAGlN,GACrC,gBAATD,EAAwBmN,GAAmB,EAAGlN,GACrC,gBAATD,EAAwBmN,GAAmB,EAAGlN,GACrC,aAATD,GAAqByM,EAAexM,IA8D7C+G,UAAWA,GACXC,eAAgBA,GAChBC,gBAAiBA,MCnPzBgH,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.42be50f3.chunk.js","sourcesContent":["import React from \"react\"\n\nfunction InvestigatorSettings(props) {\n    function handleChange(event) {\n        props.onChangeSetting(event.target.name, event.target.value)\n    }\n\n    let skidsName = '\"Skids\" '\n    skidsName = skidsName + \"O'Toole\"\n    const skidsOption = <option value={skidsName}>{skidsName}</option>\n\n    return (\n        <div className=\"settings\">\n            <h3>Investigator Options</h3>\n            <label>Investigator:</label>\n            <select name=\"investigator\" value={props.investigator} onChange={handleChange}>\n                <option value=\"Roland Banks\">Roland Banks</option>\n                <option value=\"Daisy Walker\">Daisy Walker</option>\n                {skidsOption}\n                <option value=\"Agnes Baker\">Agnes Baker</option>\n                <option value=\"Wendy Adams\">Wendy Adams</option>\n                <option value=\"Zoey Samaras\">Zoey Samaras</option>\n                <option value=\"Rex Murphy\">Rex Murphy</option>\n                <option value=\"Jenny Barnes\">Jenny Barnes</option>\n                <option value=\"Jim Culver\">Jim Culver</option>\n                <option value='\"Ashcan\" Pete'>\"Ashcan\" Pete</option>\n                <option value=\"Mark Harrigan\">Mark Harrigan</option>\n                <option value=\"Minh Thi Phan\">Minh Thi Phan</option>\n                <option value=\"Sefina Rousseau\">Sefina Rousseau</option>\n                <option value=\"William Yorick\">William Yorick</option>\n                <option value=\"Leo Anderson\">Leo Anderson</option>\n                <option value=\"Ursula Downs\">Ursula Downs</option>\n                <option value=\"Finn Edwards\">Finn Edwards</option>\n                <option value=\"Father Mateo\">Father Mateo</option>\n                <option value=\"Calvin Wright\">Calvin Wright</option>\n                <option value=\"Preston Fairmont\">Preston Fairmont</option>\n                <option value=\"Diana Stanley\">Diana Stanley</option>\n                <option value=\"Rita Young\">Rita Young</option>\n                <option value=\"Marie Lambeau\">Marie Lambeau</option>\n                <option value=\"Tommy Muldoon\">Tommy Muldoon</option>\n                <option value=\"Luke Robinson\">Luke Robinson</option>\n                <option value=\"Patrice Hathaway\">Patrice Hathaway</option>\n            </select>\n            <br style={{display: \"none\"}}/>\n            <label style={{display: \"none\"}} className=\"secondaryClass\" value={props.secondaryClass}>Secondary class:</label>\n            <select style={{display: \"none\"}} className=\"secondaryClass\" name=\"secondaryClass\" value={props.secondaryClass} onChange={handleChange}>\n                <option value=\"guardian\">Guardian</option>\n                <option value=\"seeker\">Seeker</option>\n                <option value=\"rogue\">Rogue</option>\n                <option value=\"mystic\">Mystic</option>\n                <option value=\"survivor\">Survivor</option>\n            </select>\n            <br style={{display: \"none\"}}/>\n            <label style={{display: \"none\"}} className=\"deckSize\" value={props.deckSize}>Deck size:</label>\n            <select style={{display: \"none\"}} className=\"deckSize\" name=\"deckSize\" value={props.deckSize} onChange={handleChange}>\n                <option value=\"30\">30</option>\n                <option value=\"40\">40</option>\n                <option value=\"50\">50</option>\n            </select>\n        </div>\n    )\n}\n\nexport default InvestigatorSettings","import React from 'react'\n\nfunction SettingsType(props) {\n    let style1 = {}\n    let style2 = {}\n\n    if (props.draftTab === 'Build Deck') {\n        style1 = {\n            backgroundColor: \"#ebebeb\"\n        }\n        style2 = {\n            backgroundColor: \"#bababa\",\n            borderLeft: \"black 2px solid\",\n            borderBottom: \"black 2px solid\"\n        }\n    } else {\n        style1 = {\n            backgroundColor: \"#bababa\",\n            borderRight: \"black 2px solid\",\n            borderBottom: \"black 2px solid\"\n        }\n        style2 = {\n            backgroundColor: \"#ebebeb\"\n        }\n    }\n\n    function handleClick(event) {\n        props.onChangeSetting(event.target.attributes.name.nodeValue, event.target.attributes.value.nodeValue)\n    }\n\n    return (\n        <div className='draft-type'>\n            <div className='type-button' name='draftTab' value='Build Deck' style={style1} onClick={handleClick}>\n                Build Deck\n            </div>\n            <div className='type-button' name='draftTab' value='Upgrade' style={style2} onClick={handleClick}>\n                Upgrade\n            </div>\n        </div>\n    )\n}\n\nexport default SettingsType","import React from 'react'\n\nfunction SettingsChaos(props) {\n    return (\n        <div className=\"draftSettingsDraft\">\n        </div>\n    )\n}\n\n/*\n            <label>Weighting: </label>\n            <input type=\"range\" min=\"0\" max=\"1\" step=\"0.01\" value={props.weighting} className=\"slider\" name=\"weighting\" onChange={handleChange}/>\n            <span className=\"sliderValue\">{props.weighting}</span>\n            <br />\n            <div className=\"description\">A weighting of 0 means all cards will be equally\n                likely.  A weighting of 1 means a card will be as \n                prevalent as it was when it was released, based on \n                card type and slot.\n            </div>\n*/\n\nexport default SettingsChaos","import React from 'react'\n\nfunction SettingsDraft(props) {\n\n    function handleChange(event) {\n        props.onChangeSetting(event.target.name, event.target.value)\n    }\n\n    return (\n        <div className=\"draftSettingsDraft\">\n            <label>Cards to select from:</label>\n            <input type=\"range\" min=\"2\" max=\"9\" step=\"1\" value={props.draftCount} className=\"slider\" name=\"draftCount1\" onChange={handleChange}/>\n            <span className=\"sliderValue\">{props.draftCount}</span>\n        </div>\n    )\n}\n\nexport default SettingsDraft","import React from 'react'\n\nfunction SettingsPhase(props) {\n    return (\n        <div className=\"draftPhase\">\n            <h4 style={{padding: \"0 0 5px 0\"}}>Phase {props.phase}</h4>\n            <label>Cards to select from:</label>\n            <input type=\"range\" min=\"1\" max=\"9\" value={props.draftCount} className=\"slider\" name=\"draftCount\" onChange={props.onChangeSetting}/>\n            <span className=\"sliderValue\">{props.draftCount}</span>\n            <br />\n            <label>Cards selected in this phase: </label>\n            <input type=\"range\" min=\"0\" max={props.maxCards} value={props.draftCards} className=\"slider\" name=\"draftCards\" onChange={props.onChangeSetting}/>\n            <span className=\"sliderValue\">{props.draftCards}</span>\n        </div>\n    )\n}\n\nexport default SettingsPhase","import React from 'react'\n\nimport SettingsPhase from './SettingsPhase'\n\nfunction SettingsPhasedDraft(props) {\n    let limit2 = props.deckSize - props.draftCards[0]\n    let limit3 = limit2 - props.draftCards[1]\n    let limit4 = limit3 - props.draftCards[2]\n\n    let warningText2 = null\n    let warningText3 = null\n    let warningStyle2 = {}\n    let warningStyle3 = {}\n    let warningStyle4 = {}\n\n    if (limit2 < props.draftCards[1]) {\n        if (limit2 > 0) warningText2 = \"Only \" + limit2\n        else warningText2 = \"No\"\n\n        warningStyle2 = {display: \"block\"}\n    } else {\n        warningStyle2 = {display: \"none\"}\n    }\n\n    if (limit3 < props.draftCards[2]) {\n        if (limit3 > 0) warningText3 = \"Only \" + limit3\n        else warningText3 = \"No\"\n\n        warningStyle3 = {display: \"block\"}\n        if (limit3 < 0) limit3 = 0;\n    } else {\n        warningStyle3 = {display: \"none\"}\n    }\n\n    if (limit4 > 0) {\n        warningStyle4 = {display: \"block\"}\n    } else {\n        warningStyle4 = {display: \"none\"}\n    }\n\n    function handleChange1(event) {\n        props.onChangeSetting(event.target.name + '1', event.target.value)\n    }\n\n    function handleChange2(event) {\n        props.onChangeSetting(event.target.name + '2', event.target.value)\n    }\n\n    function handleChange3(event) {\n        props.onChangeSetting(event.target.name + '3', event.target.value)\n    }\n\n    return (\n        <div className=\"draftSettingsDraft\">\n            <SettingsPhase phase=\"1\" draftCount={props.draftCount[0]} draftCards={props.draftCards[0]} maxCards={props.deckSize} onChangeSetting={handleChange1} />\n            <SettingsPhase phase=\"2\" draftCount={props.draftCount[1]} draftCards={props.draftCards[1]} maxCards={props.deckSize} onChangeSetting={handleChange2} />\n            <SettingsPhase phase=\"3\" draftCount={props.draftCount[2]} draftCards={props.draftCards[2]} maxCards={props.deckSize} onChangeSetting={handleChange3} />\n            <div className=\"warning\" style={warningStyle2}>\n                <b>Warning:</b> {warningText2} cards will be drawn in Phase 2.\n            </div>\n            <div className=\"warning\" style={warningStyle3}>\n                <b>Warning:</b> {warningText3} cards will be drawn in Phase 3.\n            </div>\n            <div className=\"warning\" style={warningStyle4}>\n                <b>Warning:</b> The final {limit4} cards will be drawn at random.\n            </div>\n        </div>\n    )\n}\n\nexport default SettingsPhasedDraft\n","import React from 'react'\n\nimport SettingsChaos from './SettingsChaos'\nimport SettingsDraft from './SettingsDraft'\nimport SettingsPhasedDraft from './SettingsPhasedDraft'\n\nfunction SettingsBuild(props) {\n    function handleChange(event) {\n        props.onChangeSetting(event.target.name, event.target.value)\n    }\n\n    let draftSettings\n\n    if (props.draftType === 'chaos') draftSettings = <SettingsChaos \n            onChangeSetting={props.onChangeSetting}\n        />\n    else if (props.draftType === 'draft') draftSettings = <SettingsDraft\n            draftCount={props.draftCount[0]} \n            onChangeSetting={props.onChangeSetting}\n        />\n    else if (props.draftType === 'phaseDraft') draftSettings = <SettingsPhasedDraft\n            draftCount={props.draftCount} \n            draftCards={props.draftCards} \n            deckSize={props.deckSize} \n            onChangeSetting={props.onChangeSetting}\n        />\n\n    return (\n        <div>\n            <label>Type:</label>\n            <select name=\"draftType\" value={props.draftType} onChange={handleChange}>\n                <option value=\"chaos\">Standard chaos</option>\n                <option value=\"draft\">Simple draft</option>\n                <option value=\"phaseDraft\">Phased draft</option>\n            </select>\n            {draftSettings}\n        </div>\n    )\n}\n\nexport default SettingsBuild","import React from 'react'\n\nfunction SettingsUpgrade(props) {\n    return (\n        <div>\n        </div>\n    )\n}\n\nexport default SettingsUpgrade","import React from 'react'\n\nimport SettingsType from './SettingsType'\nimport SettingsBuild from './SettingsBuild'\nimport SettingsUpgrade from './SettingsUpgrade'\n\nfunction Settings(props) {\n    function handleStart(event) {\n        props.onChangeSetting('building', true)\n    }\n\n    const draftSettings = props.draftTab === 'Build Deck' ?\n        <SettingsBuild \n            draftType={props.draftType} \n            draftCount={props.draftCount} \n            draftCards={props.draftCards} \n            deckSize={props.deckSize} \n            onChangeSetting={props.onChangeSetting}\n        /> :\n        <SettingsUpgrade \n            onChangeSetting={props.onChangeSetting}\n        />\n\n    const button = props.ready ?\n    <button className=\"button-ready\" onClick={handleStart}>Start</button> :\n    <button className=\"button-loading\">Loading...</button>\n\n    return (\n        <div className='settings'>\n            <SettingsType draftTab={props.draftTab} onChangeSetting={props.onChangeSetting}/>\n            <h3>Draft Options</h3>\n            <h5>{props.draftTab}</h5>\n            {draftSettings}\n            {button}\n        </div>\n    )\n}\n\nexport default Settings","import React from 'react'\n\nfunction CardList(props) {\n    const { cardList } = props\n\n    let assetCount = 0\n    let eventCount = 0\n    let skillCount = 0\n    let otherCount = 0\n    const hand = []\n    const hand2 = []\n    const arcane = []\n    const arcane2 = []\n    const accessory = []\n    const body = []\n    const ally = []\n    const tarot = []\n    const otherasset = []\n    const permanent = []\n    const event = []\n    const skill = []\n    const other = []\n\n    cardList.forEach(item => {\n        if (item.type === 'event') {\n            event.push(item)\n            eventCount += item.count\n        }\n        else if (item.type === 'skill') {\n            skill.push(item)\n            skillCount += item.count\n        }\n        else if (item.type === 'asset') {\n            if (item.permanent) permanent.push(item)\n            else if (item.slot === 'Hand') hand.push(item)\n            else if (item.slot === 'Hand x2') hand2.push(item)\n            else if (item.slot === 'Arcane') arcane.push(item)\n            else if (item.slot === 'Arcane x2') arcane2.push(item)\n            else if (item.slot === 'Accessory') accessory.push(item)\n            else if (item.slot === 'Body') body.push(item)\n            else if (item.slot === 'Ally') ally.push(item)\n            else if (item.slot === 'Tarot') tarot.push(item)\n            else otherasset.push(item)\n            assetCount += item.count\n        }\n        else {\n            other.push(item)\n            otherCount += item.count\n        }\n    })\n\n    const assetHeader = assetCount > 0 ? <h4>Assets ({assetCount})</h4> : null\n    \n    const handHeader = hand.length > 0 ? <p className='slot-header'>Hand</p> : null\n    const handContents = hand.sort((a, b) => (a.name > b.name) ? 1 : -1).map((item, index) => {\n        const countStr = item.count > 1 ? ' x' + item.count : null\n        return <p key={index}>{item.name}{countStr}</p>\n    })\n\n    const hand2Header = hand2.length > 0 ? <p className='slot-header'>Hand x2</p> : null\n    const hand2Contents = hand2.sort((a, b) => (a.name > b.name) ? 1 : -1).map((item, index) => {\n        const countStr = item.count > 1 ? ' x' + item.count : null\n        return <p key={index}>{item.name}{countStr}</p>\n    })\n\n    const arcaneHeader = arcane.length > 0 ? <p className='slot-header'>Arcane</p> : null\n    const arcaneContents = arcane.sort((a, b) => (a.name > b.name) ? 1 : -1).map((item, index) => {\n        const countStr = item.count > 1 ? ' x' + item.count : null\n        return <p key={index}>{item.name}{countStr}</p>\n    })\n\n    const arcane2Header = arcane2.length > 0 ? <p className='slot-header'>Arcane x2</p> : null\n    const arcane2Contents = arcane2.sort((a, b) => (a.name > b.name) ? 1 : -1).map((item, index) => {\n        const countStr = item.count > 1 ? ' x' + item.count : null\n        return <p key={index}>{item.name}{countStr}</p>\n    })\n\n    const accessoryHeader = accessory.length > 0 ? <p className='slot-header'>Accessory</p> : null\n    const accessoryContents = accessory.sort((a, b) => (a.name > b.name) ? 1 : -1).map((item, index) => {\n        const countStr = item.count > 1 ? ' x' + item.count : null\n        return <p key={index}>{item.name}{countStr}</p>\n    })\n\n    const bodyHeader = body.length > 0 ? <p className='slot-header'>Body</p> : null\n    const bodyContents = body.sort((a, b) => (a.name > b.name) ? 1 : -1).map((item, index) => {\n        const countStr = item.count > 1 ? ' x' + item.count : null\n        return <p key={index}>{item.name}{countStr}</p>\n    })\n\n    const allyHeader = ally.length > 0 ? <p className='slot-header'>Ally</p> : null\n    const allyContents = ally.sort((a, b) => (a.name > b.name) ? 1 : -1).map((item, index) => {\n        const countStr = item.count > 1 ? ' x' + item.count : null\n        return <p key={index}>{item.name}{countStr}</p>\n    })\n\n    const tarotHeader = tarot.length > 0 ? <p className='slot-header'>Tarot</p> : null\n    const tarotContents = tarot.sort((a, b) => (a.name > b.name) ? 1 : -1).map((item, index) => {\n        const countStr = item.count > 1 ? ' x' + item.count : null\n        return <p key={index}>{item.name}{countStr}</p>\n    })\n\n    const otherassetHeader = otherasset.length > 0 ? <p className='slot-header'>Other</p> : null\n    const otherassetContents = otherasset.sort((a, b) => (a.name > b.name) ? 1 : -1).map((item, index) => {\n        const countStr = item.count > 1 ? ' x' + item.count : null\n        return <p key={index}>{item.name}{countStr}</p>\n    })\n\n    const permanentHeader = permanent.length > 0 ? <p className='slot-header'>Permanent</p> : null\n    const permanentContents = permanent.sort((a, b) => (a.name > b.name) ? 1 : -1).map((item, index) => {\n        const countStr = item.count > 1 ? ' x' + item.count : null\n        return <p key={index}>{item.name}{countStr}</p>\n    })\n\n\n    const eventHeader = eventCount > 0 ? <h4>Events ({eventCount})</h4> : null\n    const eventContents = event.sort((a, b) => (a.name > b.name) ? 1 : -1).map((item, index) => {\n        const countStr = item.count > 1 ? ' x' + item.count : null\n        return <p key={index}>{item.name}{countStr}</p>\n    })\n\n    const skillHeader = skillCount > 0 ? <h4>Skills ({skillCount})</h4> : null\n    const skillContents = skill.sort((a, b) => (a.name > b.name) ? 1 : -1).map((item, index) => {\n        const countStr = item.count > 1 ? ' x' + item.count : null\n        return <p key={index}>{item.name}{countStr}</p>\n    })\n\n    const otherHeader = otherCount > 0 ? <h4>Other ({otherCount})</h4> : null\n    const otherContents = other.sort((a, b) => (a.name > b.name) ? 1 : -1).map((item, index) => {\n        const countStr = item.count > 1 ? ' x' + item.count : null\n        return <p key={index}>{item.name}{countStr}</p>\n    })\n\n    return (\n        <div className=\"settings\">\n            <h3 style={{marginBottom: \"-10px\"}}>Card List</h3>\n            <div className=\"cardContainer\">\n                <div className=\"col1\">\n                    {assetHeader}\n                    {handHeader}\n                    {handContents}\n                    {hand2Header}\n                    {hand2Contents}\n                    {arcaneHeader}\n                    {arcaneContents}\n                    {arcane2Header}\n                    {arcane2Contents}\n                    {accessoryHeader}\n                    {accessoryContents}\n                    {bodyHeader}\n                    {bodyContents}\n                    {allyHeader}\n                    {allyContents}\n                    {tarotHeader}\n                    {tarotContents}\n                    {otherassetHeader}\n                    {otherassetContents}\n                    {permanentHeader}\n                    {permanentContents}\n                </div>\n                <div className=\"col2\">\n                    {eventHeader}\n                    {eventContents}\n                    {skillHeader}\n                    {skillContents}\n                    {otherHeader}\n                    {otherContents}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default CardList\n","import React from 'react'\n\nfunction DraftArea(props) {\n    const { draftCount, draftPool, draftCard, draftType, phase, cardList, updateCardList, updateDraftPool } = props\n\n    let newList = []\n    newList = newList.concat(cardList)\n\n    function handleClick(event) {\n        const index = draftPool.findIndex(item => {\n            return event.target.src.includes(item.imagesrc)\n        })\n\n        const updatedList = draftCard(draftPool[index], newList)\n\n        updateCardList(updatedList)\n        updateDraftPool([])\n    }\n\n    let images = []\n\n    for (let i = 0; i < draftCount; i++) {\n        const imageSrc = \"https://www.arkhamdb.com\" + draftPool[i].imagesrc\n        images.push(<div className=\"draft-card\" key={i}><img className=\"draft-image\" src={imageSrc} alt={draftPool[i].name} onClick={handleClick}/></div>)\n    }\n\n    const phaseText = draftType === 'phaseDraft' ? ' - Phase ' + phase : null\n\n    return (\n        <div className=\"settings\">\n            <h3>Draft{phaseText}</h3>\n            <div className='draft-container'>\n                {images}\n            </div>\n            <p>Click image to draft card</p>\n        </div>\n    )\n}\n\nexport default DraftArea","import React from 'react'\n\nimport CardList from './CardList'\nimport DraftArea from './DraftArea'\n\nfunction DraftBuild(props) {\n    const { investigator, deckSize, draftCount, cardCount, draftType, phase, cardList, draftPool, cardData, draftCard, updateCardList, updateDraftPool } = props\n\n    let investigatorCardImage = null\n    let investigatorCardImageBack = null\n\n    if (cardData) {\n        const investigatorID = Object.keys(cardData)\n        .filter(key => {\n            return  cardData[key].name === investigator\n        })[0]\n\n        const imagesrc = \"https://www.arkhamdb.com\" + cardData[investigatorID].imagesrc\n        const backimagesrc = \"https://www.arkhamdb.com\" + cardData[investigatorID].backimagesrc\n        investigatorCardImage = <img className=\"investigator-image\" src={imagesrc} alt={props.investigator} />\n        investigatorCardImageBack = <img className=\"investigator-image\" src={backimagesrc} alt={props.investigator + ' (back)'} />\n    }\n\n    let draftContent = null\n\n    if (draftPool.length > 0) {\n        draftContent = <DraftArea \n            draftCount={draftCount}\n            draftCard={draftCard}\n            phase={phase}\n            draftType={draftType}\n            draftPool={draftPool}\n            cardList={cardList}\n            updateCardList={updateCardList}\n            updateDraftPool={updateDraftPool}\n        />\n    }\n\n    return (\n        <div>\n            <div className=\"settings\">\n                <h2>{investigator}</h2>\n                <br />\n                {investigatorCardImage}\n                {investigatorCardImageBack}\n                <p><b>Cards: </b>{cardCount}/{deckSize}</p>\n            </div>\n            {draftContent}\n            <CardList \n                cardList={cardList}\n            />\n        </div>\n    )\n}\n\nexport default DraftBuild","import React from 'react'\n\nimport './App.css';\n\nimport InvestigatorSettings from './components/InvestigatorSettings'\nimport Settings from './components/Settings'\n\nimport DraftBuild from './components/DraftBuild'\n\nfunction App(props) {\n    let contents = null\n\n    if (props.fetchError) {\n        contents = \n            <div>\n                Fetch error!\n            </div>\n    }\n    else if (props.building) {\n        contents = \n            <DraftBuild\n                draftType={props.draftType}\n                investigator={props.investigator} \n                secondaryClass={props.secondaryClass} \n                deckSize={props.deckSize}\n                draftCount={props.draftCount[props.phase-1]}\n                draftCards={props.draftCards[props.phase-1]}\n                cardCount={props.cardCount}\n                phase={props.phase}\n                cardList={props.cardList}\n                cardData={props.cardData}\n                draftPool={props.draftPool}\n                draftCard={props.draftCard}\n                updateCardList={props.updateCardList}\n                updateDraftPool={props.updateDraftPool}\n            />\n    }\n    else {\n        contents = \n        <div>\n            <InvestigatorSettings \n                investigator={props.investigator} \n                secondaryClass={props.secondaryClass} \n                deckSize={props.deckSize} \n                onChangeSetting={props.handleChange}\n            />\n            <Settings\n                draftTab={props.draftTab} \n                draftType={props.draftType} \n                draftCount={props.draftCount}\n                draftCards={props.draftCards}\n                deckSize={props.deckSize} \n                ready={props.ready}\n                onChangeSetting={props.handleChange}\n            />\n        </div>\n    }\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n            ArkhamDraftMouse \n            </header>\n            {contents}\n        </div>\n    )\n}\n\nexport default App;\n","function DrawCard(cardData, draftPool) {\n    let legal = false\n    let randomCard = null\n\n    while (!legal) {\n        randomCard = cardData[Math.floor(Math.random() * cardData.length)]\n\n        const randomCode = randomCard.code\n        const existingIndex = (draftPool && draftPool.length > 0) ? draftPool.findIndex(item => item.code === randomCode) : -1\n        \n        if (existingIndex < 0) legal = true\n    }\n\n    return randomCard\n}\n\nexport default DrawCard","// card data:\n// pack_code\n// pack_name\n// type_code\n        // treachery\n        // investigator\n        // asset\n        // event\n        // skill\n        // enemy\n        // story\n        // location\n// type_name\n// subtype_code\n// faction_code\n// faction_name\n// position\n// exceptional\n// myriad\n// code\n// name\n// real_name\n// subname\n// text\n// real_text\n// quantity\n// skill_willpower\n// skill_intellect\n// skill_combat\n// skill_agility\n// clues_fixed\n// health\n// health_per_investigator\n// sanity\n// deck_limit\n// traits\n// real_traits\n// deck_requirements\n// deck_options\n// flavor\n// illustrator\n// is_unique\n// exile\n// hidden\n// permanent\n// double_sided\n// back_text\n// back_flavor\n// octgn_id\n// url\n// imagesrc\n// backimagesrc\n\n// slot\n    // Hand\n    // Accessory\n    // Ally\n    // Hand x2\n    // Arcane\n    // Body\n    // Tarot\n// restrictions\n// cost\n// xp\n\nfunction FilterCards(props) {\n    const { investigator, cardData, cardList } = props\n\n    const legalSets = { 'core': 1\n        ,'dwl': 1, 'tmm': 1, 'tece': 1, 'bota': 1, 'uau': 1, 'wda': 1, 'litas': 1\n        ,'ptc': 1, 'eotp': 1, 'tuo': 1, 'apot': 1, 'tpm': 1, 'bsr': 1, 'dca': 1\n        ,'tfa': 1, 'tof': 1, 'tbb': 1, 'hote': 1, 'tcoa': 1, 'tdoy': 1, 'sha': 1\n        ,'tcu': 1, 'tsn': 1, 'wos': 1, 'fgg': 1, 'uad': 1, 'icc': 1, 'bbt': 1\n        ,'tde': 1, 'sfk': 1, 'tsh': 1, 'dsm': 1, 'pnr': 1, 'wgd': 1, 'woc': 1\n        ,'rtnotz': 1, 'rtdwl': 1, 'rtptc': 1 }\n\n    const investigatorID = Object.keys(cardData)\n    .filter(key => {\n        return cardData[key].name === investigator\n    })[0]\n\n    const deckOptions = cardData[investigatorID].deck_options\n\n    const filteredDeck = filterDeckForLimited(cardList, deckOptions)\n\n//    const minLevel = 0\n//    const maxLevel = 0\n\n    const filteredData = cardData.filter(card => {\n        if (card.type_code === 'investigator') return false\n        if (card.type_code === 'story') return false\n        if (card.type_code === 'location') return false\n        if (card.type_code === 'enemy') return false\n        if (card.type_code === 'treachery') return false\n        if (card.bonded_to) return false\n        // currently means weakness\n        if (card.subtype_code) return false\n        if (card.xp && card.xp > 0) return false\n        if (card.restrictions && card.restrictions.investigator) return false\n        if (!legalSets[card.pack_code]) return false\n\n        // this isn't right for upgrades yet\n        let legal = false\n        for (let i = 0; i < deckOptions.length; i++) {\n            let optionLegal = false\n\n            if (testDeckOption(card, deckOptions[i])) {\n                optionLegal = true\n\n                if (deckOptions[i].not) {\n                    optionLegal = false\n                }\n                else if (deckOptions[i].limit) {\n                    const inDeck = countDeckLimited(filteredDeck, deckOptions[i])\n\n                    if (inDeck >= deckOptions[i].limit) optionLegal = false\n                }\n            }\n\n            if (optionLegal) legal = true\n        }\n\n        if (!legal) return false\n\n        // check to see if there's already max in the deck\n        let limited = false\n        \n        cardList.forEach(item => {\n            if (item.name === card.name) {\n                if (item.count >= card.deck_limit) {\n                    console.log(card.name + ' : Over the limit')\n                    limited = true\n                }\n            }\n        })\n\n        if (limited) return false\n\n        return true\n    })\n\n    function filterDeckForLimited(list, options) {\n        if (!list) return []\n\n        let filteredDeck = []\n\n        list.forEach(item => {\n            let legal = false\n\n            for (let i = 0; i < options.length; i++) {\n                if (options[i].limit) continue;\n\n                const optionLegal = testDeckOption(item, options[i])\n\n                if (optionLegal) legal = true\n            }\n\n            if (!legal) filteredDeck.push(item)\n        })\n\n        return filteredDeck\n    }\n\n    function countDeckLimited(list, option) {\n        let count = 0\n\n        if (list) {\n            list.forEach(item => {\n                if (testDeckOption(item, option)) count += item.count\n            })\n        }\n\n        return count\n    }\n\n    function testDeckOption(card, option) {\n        let level = true\n        let faction = true\n        let trait = true\n\n        if (option.faction) {\n            faction = false\n\n            for (let f = 0; f < option.faction.length; f++) {\n                if (card.faction_code === option.faction[f]) {\n                    faction = true\n                }\n                if (card.faction2_code === option.faction[f]) {\n                    faction = true\n                }\n            }\n        } \n\n        if (option.level) {\n            level = false\n\n            const min = option.level.min\n            const max = option.level.max\n\n            const ixp = card.xp === undefined ? 0 : card.xp\n\n            if (ixp >= min && ixp <= max) level = true;\n        }\n\n        if (option.trait) {\n            trait = false\n\n            const cardTraits = card.traits\n            \n            if (cardTraits && cardTraits.search(new RegExp(option.trait, \"i\")) >= 0)\n                trait = true\n        }\n\n        return faction && level && trait\n    }\n\n    return filteredData\n}\n\nexport default FilterCards\n\n/* odds research\n            // stat test\n            const setArray = [ 'core'\n                ,'dwl', 'tmm', 'tece', 'bota', 'uau', 'wda', 'litas'\n                ,'ptc', 'eotp', 'tuo', 'apot', 'tpm', 'bsr', 'dca'\n                ,'tfa', 'tof', 'tbb', 'hote', 'tcoa', 'tdoy', 'sha'\n                ,'tcu', 'tsn', 'wos', 'fgg', 'uad', 'icc', 'bbt'\n                ,'tde', 'sfk', 'tsh', 'dsm', 'pnr', 'wgd', 'woc'\n                ,'rtnotz', 'rtdwl', 'rtptc'\n            ]\n\n//            const assets = countCards('asset', setArray)\n//            const events = countCards('event', setArray)\n//            const skills = countCards('skill', setArray)\n\n            const hand = countCards('asset', 'Hand', setArray)\n            const hands2 = countCards('asset', 'Hand x2', setArray)\n            const ally = countCards('asset', 'Ally', setArray)\n            const accessory = countCards('asset', 'Accessory', setArray)\n            const arcane = countCards('asset', 'Arcane', setArray)\n            const body = countCards('asset', 'Body', setArray)\n            const tarot = countCards('asset', 'Tarot', setArray)\n\n//            console.log('Assets: ' + assets)\n//            console.log('Events: ' + events)\n//            console.log('Skills: ' + skills)\n\n            console.log('Hand: ' + hand)\n            console.log('Ally: ' + ally)\n            console.log('Arcane: ' + arcane)\n            console.log('2xHands: ' + hands2)\n            console.log('Accessory: ' + accessory)\n            console.log('Body: ' + body)\n            conso le.log('Tarot: ' + tarot)\n*/\n/* odds research\n    function countCards(cardType, cardSlot, sets) {\n        const filteredData = cardData.filter(card => {\n            // currently means weakness\n            if (card.type_code !== cardType) return false\n            if (card.subtype_code) return false\n            if (card.slot && card.slot !== cardSlot) return false\n            if (!card.slot) return false\n//            if (card.xp && card.xp > 0) return false            \n            if (card.restrictions && card.restrictions.investigator) return false\n    //        console.log(card.slot + ' <=> ' + cardSlot + ' (' + card.name + ')')\n    \n            let foundSet = false\n            for (let i = 0; i < sets.length; i++) {\n                if (card.pack_code === sets[i]) foundSet = true\n            }\n\n            return foundSet\n        })\n\n        return filteredData.length\n    }\n*/\n\n","import DrawCard from './DraftData'\nimport FilterCards from './DraftFilters'\n\nfunction StandardChaos(props) {\n    const { draftCards, draftCard, cardList } = props;\n    let newList = []\n\n    newList = newList.concat(cardList)\n\n    // generates all cards, sets cardList state\n    const filteredData = FilterCards(props)\n\n    for (let i = 0; i < draftCards; i++) {\n        const card = DrawCard(filteredData)\n        newList = draftCard(card, newList)\n    }\n\n    return newList\n}\n\nexport default StandardChaos","import DrawCard from './DraftData'\nimport FilterCards from './DraftFilters'\n\nfunction SimpleDraft(props) {\n    console.log('SimpleDraft')\n    const { draftCount } = props\n\n    // generates draft cards\n    const filteredData = FilterCards(props)\n\n    let draftPool = []\n\n    for (let i = 0; i < draftCount; i++) {\n        const card = DrawCard(filteredData, draftPool)\n\n        draftPool.push(card)\n    }\n\n    return draftPool\n}\n\nexport default SimpleDraft","import React, { useState, useEffect } from 'react';\n\nimport App from './App';\nimport StandardChaos from './components/StandardChaos'\nimport SimpleDraft from './components/SimpleDraft'\n\nfunction AppContainer() {\n    const [investigator, changeInvestigator] = useState(\"Roland Banks\")\n    const [secondaryClass, changeSecondaryClass] = useState(\"guardian\")\n    const [selectedDeckSize, changeSelectedDeckSize] = useState(\"30\")\n    const [deckSize, changeDeckSize] = useState(\"30\")\n    const [draftTab, changeDraftTab] = useState(\"Build Deck\")\n    const [draftType, changeDraftType] = useState(\"chaos\")\n    const [draftCount, changeDraftCount] = useState([3, 3, 3])\n    const [draftCards, changeDraftCards] = useState([10, 10, 10])\n    const [building, changeBuilding] = useState(false)\n    const [initialized, changeInitialized] = useState(false)\n\n    const [fetching, changeFetching] = useState(false)\n    const [cardData, updateCardData] = useState(null)\n    const [fetchError, updateFetchError] = useState(false)\n    const [cardList, updateCardList] = useState([])\n    const [draftPool, updateDraftPool] = useState([])\n    const [phase, changePhase] = useState(1)\n\n    let cardCount = 0\n\n    if (cardList) {\n        for (let item in cardList) {\n            // permanent don't count\n            if (!cardList[item].permanent) cardCount += cardList[item].count\n        }\n    }\n\n    useEffect(() => fetchData(), [])\n\n    function fetchData() {\n        changeFetching(true)\n\n        fetch(\"https://cors-anywhere.heroku.com/http://arkhamdb.com/api/public/cards\", { mode: \"no-cors\" })\n        .then(res => {\n            return res.json()\n        })\n        .then(res => {\n            updateCardData(res)\n            changeFetching(false)\n        })\n        .catch(() => updateFetchError(true))\n    }\n\n    useEffect(() => {\n        if (building && !initialized) {\n            changeInitialized(true)\n            if (draftType === 'chaos') {\n                const list = StandardChaos({\n                    investigator: investigator,\n                    draftCards: deckSize,\n                    upgrade: false,\n                    cardList: cardList,\n                    cardData: cardData,\n                    draftCard: draftCard\n                })\n    \n                updateCardList(list)\n            }\n            else {\n                if (draftCount === 1) {\n                    const list = StandardChaos({\n                        investigator: investigator,\n                        draftCards: draftCards[phase-1],\n                        upgrade: false,\n                        cardList: cardList,\n                        cardData: cardData,\n                        draftCard: draftCard\n                    })    \n    \n                    updateCardList(list)\n                }\n                else {\n                    const pool = SimpleDraft({\n                        investigator: investigator,\n                        upgrade: false,\n                        draftCount: draftCount[phase-1],\n                        cardList: cardList,\n                        cardData: cardData,\n                        draftCard: draftCard\n                        })\n\n                    updateDraftPool(pool)\n                }\n            }\n        }\n    }, [building, investigator, draftCards, cardList, cardData, selectedDeckSize, deckSize, draftCount, draftType, phase, initialized])\n\n    useEffect(() => {\n        if (building && draftPool.length < 1) {\n            if (draftType === 'draft') {\n                if (cardCount < deckSize) {\n                    const pool = SimpleDraft({\n                        investigator: investigator,\n                        upgrade: false,\n                        draftCount: draftCount[phase-1],\n                        cardList: cardList,\n                        cardData: cardData,\n                        draftCard: draftCard\n                    })\n\n                    updateDraftPool(pool)\n                }\n            }\n            else if (draftType === 'phaseDraft') {\n                let targetCards = 0\n\n                for (let i = 0; i < phase; i++) targetCards += parseInt(draftCards[i], 10)\n\n                if (cardCount < targetCards) {\n                    const pool = SimpleDraft({\n                        investigator: investigator,\n                        upgrade: false,\n                        draftCount: draftCount[phase-1],\n                        cardList: cardList,\n                        cardData: cardData,\n                        draftCard: draftCard\n                    })\n\n                    updateDraftPool(pool)\n                }\n                else {\n                    if (phase < 3) {\n                        changePhase(phase + 1)\n\n                        const pool = SimpleDraft({\n                            investigator: investigator,\n                            upgrade: false,\n                            draftCount: draftCount[phase],\n                            cardList: cardList,\n                            cardData: cardData,\n                            draftCard: draftCard\n                        })\n\n                        updateDraftPool(pool)\n                    }\n                    else {\n                        if (cardCount < deckSize) {\n                            const list = StandardChaos({\n                                investigator: investigator,\n                                draftCards: deckSize - cardCount,\n                                upgrade: false,\n                                cardList: cardList,\n                                cardData: cardData,\n                                draftCard: draftCard\n                            })    \n        \n                            updateCardList(list)        \n                        }\n                    }\n                }   \n            }\n        }\n    }, [building, draftPool, cardCount, cardData, cardList, selectedDeckSize, deckSize, draftCards, draftCount, draftType, investigator, phase])\n\n    function handleChange(name, value) {\n        if (name === 'investigator') {\n            changeInvestigator(value)\n\n            const investigatorID = Object.keys(cardData)\n            .filter(key => {\n                return  cardData[key].name === value\n            })[0]\n\n            changeDeckSize(cardData[investigatorID].deck_requirements.size)\n        }\n        else if (name === 'secondaryClass') changeSecondaryClass(value)\n        else if (name === 'deckSize') {\n            changeSelectedDeckSize(value)\n            changeDeckSize(value)\n        }\n        else if (name === 'draftTab') changeDraftTab(value)\n        else if (name === 'draftType') changeDraftType(value)\n        else if (name === 'draftCount1') doChangeDraftCount(1, value)\n        else if (name === 'draftCount2') doChangeDraftCount(2, value)\n        else if (name === 'draftCount3') doChangeDraftCount(3, value)\n        else if (name === 'draftCards1') doChangeDraftCards(1, value)\n        else if (name === 'draftCards2') doChangeDraftCards(2, value)\n        else if (name === 'draftCards3') doChangeDraftCards(3, value)\n        else if (name === 'building') changeBuilding(value)\n    }\n\n    function doChangeDraftCount(index, value) {\n        let newCount = []\n        newCount = newCount.concat(draftCount)\n        newCount[index-1] = value\n        changeDraftCount(newCount)\n    }\n\n    function doChangeDraftCards(index, value) {\n        let newCards = []\n        newCards = newCards.concat(draftCards)\n        newCards[index-1] = value\n        changeDraftCards(newCards)\n    }\n\n    function draftCard(card, list) {\n        if (list) {\n            const existingIndex = list.length > 0 ? list.findIndex(item => item.key === card.code) : -1\n\n            if (existingIndex >= 0) {\n                list.map(item => {\n                    if (item.name === card.name) {\n                        item.count = item.count + 1\n                        return item\n                    }\n\n                    return item\n                })\n            }\n            else {\n                list.push({ name: card.name, key: card.code, type: card.type_code, slot: card.slot, faction_code: card.faction_code, faction2_code: card.faction2_code, xp: card.xp, permanent: card.permanent, count: 1 })\n            }\n        }\n        else {\n            list = [{ name: card.name, key: card.code, type: card.type_code, slot: card.slot, faction_code: card.faction_code, faction2_code: card.faction2_code, xp: card.xp, permanent: card.permanent, count: 1 }]\n        }\n\n        return list\n    }\n\n    const ready = cardData && !fetching && !fetchError\n\n    return (\n        <App\n        investigator={investigator}\n        secondaryClass={secondaryClass}\n        deckSize={deckSize}\n        draftTab={draftTab}\n        draftType={draftType}\n        draftCount={draftCount}\n        draftCards={draftCards}\n        cardCount={cardCount}\n        ready={ready}\n        building={building}\n        fetchError={fetchError}\n        phase={phase}\n        cardList={cardList}\n        draftPool={draftPool}\n        cardData={cardData}\n        handleChange={handleChange}\n        draftCard={draftCard}\n        updateCardList={updateCardList}\n        updateDraftPool={updateDraftPool}\n        />\n    )\n}\n\nexport default AppContainer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppContainer from './AppContainer';\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppContainer />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}